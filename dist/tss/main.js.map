{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/ambassadors/ambassador.service.ts","webpack:///./src/app/ambassadors/ambassadors.component.css","webpack:///./src/app/ambassadors/ambassadors.component.html","webpack:///./src/app/ambassadors/ambassadors.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/attendees/attendees.component.css","webpack:///./src/app/attendees/attendees.component.html","webpack:///./src/app/attendees/attendees.component.ts","webpack:///./src/app/config.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/events/event.service.ts","webpack:///./src/app/events/events.component.css","webpack:///./src/app/events/events.component.html","webpack:///./src/app/events/events.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/how/how.component.css","webpack:///./src/app/how/how.component.html","webpack:///./src/app/how/how.component.ts","webpack:///./src/app/locations/location.service.ts","webpack:///./src/app/locations/locations.component.css","webpack:///./src/app/locations/locations.component.html","webpack:///./src/app/locations/locations.component.ts","webpack:///./src/app/members/member.service.ts","webpack:///./src/app/members/members.component.css","webpack:///./src/app/members/members.component.html","webpack:///./src/app/members/members.component.ts","webpack:///./src/app/memberships/membership.service.ts","webpack:///./src/app/memberships/memberships.component.css","webpack:///./src/app/memberships/memberships.component.html","webpack:///./src/app/memberships/memberships.component.ts","webpack:///./src/app/places/place.service.ts","webpack:///./src/app/places/places.component.css","webpack:///./src/app/places/places.component.html","webpack:///./src/app/places/places.component.ts","webpack:///./src/app/surveys/survey.service.ts","webpack:///./src/app/surveys/surveys.component.css","webpack:///./src/app/surveys/surveys.component.html","webpack:///./src/app/surveys/surveys.component.ts","webpack:///./src/app/users/user.service.ts","webpack:///./src/app/users/users.component.css","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.ts","webpack:///./src/app/viewevents/viewevents.component.css","webpack:///./src/app/viewevents/viewevents.component.html","webpack:///./src/app/viewevents/viewevents.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".container {\\n    color: #c5c2c2;\\n    margin: 50px;\\n}\\n\\n.about li {\\n    list-style: none;\\n    padding: 10px 0px;\\n    line-height: 2em;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-lg-center\\\">\\n        <div>\\n            <h3>About The Secret Society</h3>\\n        </div>\\n    </div>\\n    <div class=\\\"row justify-content-md-center\\\">\\n        <div class=\\\"col\\\">\\n            <p>Based in Los Angeles, the Secret Society is a group of taste makers and lifestyle purveyors from across America who have converged to provide first-class residents of each major city a safe haven to escape the drudgery of a mundane social\\n                life. It's our mission to provide a choice selection of individuals with an exclusive and upscale environment to relax, network, mix and mingle. We have sought out the cities top power brokers, trendsetters, professionals, socially progressive\\n                and artistically inclined to join our preferential network. All we ask of our patrons is trust.</p>\\n            <ul class=\\\"about\\\">\\n                <li>\\n                    <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> - TRUST THAT: Your identity will be protected.</li>\\n                <li>\\n                    <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> - TRUST THAT: You will find our events to be thrilling.</li>\\n                <li>\\n                    <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> - TRUST THAT: You will meet interesting people from all walks of life and backgrounds.</li>\\n                <li>\\n                    <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> - TRUST THAT: You will be assured that our events will be safe and exclusive.</li>\\n            </ul>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { faGraduationCap } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n  faGraduationCap = faGraduationCap;\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AmbassadorService {\n  apiUrl = \"https://solutetech.io\";\n\n  constructor(private http: HttpClient) { }\n\n  getAmbassadors() {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/ambassadors`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  getAmbassador(id) {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/ambassadors/${id}`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  addAmbassador(form) {\n    return new Promise( ( resolve ) => {\n      this.http.post(`${this.apiUrl}/ambassadors`, form)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  updateAmbassador(form, id) {\n    return new Promise( ( resolve ) => {\n      this.http.patch(`${this.apiUrl}/ambassadors/${id}`, form)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  deleteAmbassador(id) {\n    return new Promise( ( resolve ) => {\n      this.http.delete(`${this.apiUrl}/ambassadors/${id}`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n}\n","module.exports = \".container-fluid {\\n    margin-top: 50px;\\n    color: #000;\\n    padding: 0px 40px;\\n}\\n\\n.add-row {\\n    padding-bottom: 10px;\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <h3>Ambassadors</h3>\\n    </div>\\n    <div class=\\\"row add-row\\\">\\n        <div class=\\\"col\\\"></div>\\n        <div class=\\\"col text-right\\\">\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"open(contentNew, null)\\\"><fa-icon [icon]=\\\"faPlusCircle\\\"></fa-icon> Add New Ambassadors</button>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <table class=\\\"table table-striped table-light table-hover\\\">\\n            <thead>\\n                <tr>\\n                    <!-- <th scope=\\\"col\\\">ID</th> -->\\n                    <th scope=\\\"col\\\">FIRST</th>\\n                    <th scope=\\\"col\\\">LAST</th>\\n                    <th scope=\\\"col\\\">PHONE</th>\\n                    <th scope=\\\"col\\\">EMAIL</th>\\n                    <th scope=\\\"col\\\">CODE</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let amb of ambassadors\\\">\\n                    <!-- <th scope=\\\"row\\\">{{ amb.id }}</th> -->\\n                    <td>{{ amb.first }}</td>\\n                    <td>{{ amb.last }}</td>\\n                    <td>{{ amb.phone }}</td>\\n                    <td>{{ amb.email }}</td>\\n                    <td>{{ amb.code }}</td>\\n                    <td>\\n                        <button class=\\\"btn btn-info\\\" (click)=\\\"open(contentEdit, amb)\\\">\\n                            <fa-icon [icon]=\\\"faEdit\\\"></fa-icon>\\n                        </button>&nbsp;\\n                        <button class=\\\"btn btn-danger\\\" (click)=\\\"open(contentDelete, amb)\\\">\\n                            <fa-icon [icon]=\\\"faTrash\\\"></fa-icon>\\n                        </button>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\\n<ng-template #contentDelete let-modal>\\n    <div class=\\\"modal-header bg-danger\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Delete Confirmation</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            Are you sure you want to delete <strong>{{ modamb.first }} {{modamb.last}}</strong>?\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"delete(modamb.id); modal.close()\\\">Yes</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">No</button>\\n    </div>\\n</ng-template>\\n\\n\\n<ng-template #contentEdit let-modal>\\n    <div class=\\\"modal-header bg-info\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ modamb.first }} {{ modamb.last }}</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <form [formGroup]=\\\"ambassadorForm\\\" (ngSubmit)=\\\"onUpdate(modamb.id)\\\">\\n\\n                <!-- First Name -->\\n                <div class=\\\"form-group\\\">\\n                    <label>First Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"first\\\" class=\\\"form-control\\\" [value]=\\\"modamb.first\\\" required />\\n                </div>\\n\\n                <!-- Last Name -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Last Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"last\\\" class=\\\"form-control\\\" [value]=\\\"modamb.last\\\" required />\\n                </div>\\n\\n                <!-- Phone field -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Phone</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"phone\\\" class=\\\"form-control\\\" [value]=\\\"modamb.phone\\\" required />\\n                </div>\\n\\n                <!-- Email field -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Email</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [value]=\\\"modamb.email\\\" required />\\n                </div>\\n\\n                <!-- Create event button -->\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-outline-primary\\\">Update Ambassador</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n    </div>\\n</ng-template>\\n\\n\\n<!-- Create New Modal -->\\n<ng-template #contentNew let-modal>\\n    <div class=\\\"modal-header bg-success\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Create an Ambassador</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <form [formGroup]=\\\"ambassadorForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                <!-- First Name -->\\n                <div class=\\\"form-group\\\">\\n                    <label>First Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"first\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <!-- Last Name -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Last Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"last\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <!-- Phone field -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Phone</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"phone\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <!-- Email field -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Email</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <!-- Create event button -->\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-outline-primary\\\" *ngIf=\\\"ambassadorForm.valid\\\">Create Ambassador</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Cancel</button>\\n    </div>\\n</ng-template>\"","import { AmbassadorService } from './ambassador.service';\nimport { Component, OnInit } from '@angular/core';\nimport { faTrash, faEdit, faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-ambassadors',\n  templateUrl: './ambassadors.component.html',\n  styleUrls: ['./ambassadors.component.css']\n})\nexport class AmbassadorsComponent implements OnInit {\n  ambassadors: any;\n  faTrash = faTrash;\n  faEdit = faEdit;\n  faPlusCircle = faPlusCircle;\n  modamb: any;\n  ambassadorForm: FormGroup;\n\n  constructor(\n    private ambassador: AmbassadorService, \n    private modalService: NgbModal, \n    private formBuilder: FormBuilder \n  ) { }\n\n  ngOnInit() {\n    this.getAmbassadors();\n\n    this.ambassadorForm = this.formBuilder.group({\n      first: ['', Validators.required],\n      last: ['', Validators.required],\n      phone: ['', Validators.required],\n      email: ['', Validators.required],\n    });\n  }\n\n  getAmbassadors() {\n    this.ambassador.getAmbassadors().then( data => this.ambassadors = data['items'] );\n  }\n\n  delete(id) {\n    this.ambassador.deleteAmbassador(id).then( data => {\n      console.log(data);\n      this.getAmbassadors();\n    });\n  }\n\n  open(content, item) {\n    if (item != null) {\n      this.modamb = item;\n    }\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', size: 'lg'}).result.then((result) => {});\n  }\n\n  onSubmit() {\n    var form = this.ambassadorForm.value;\n    console.log(form);\n    this.ambassador.addAmbassador(form).then( data => {\n      if (data['success']) {\n        this.modalService.dismissAll();\n        this.getAmbassadors();\n      } else {\n        console.log(\"no\", data);\n      }\n    });\n  }\n\n  onUpdate(id) {\n    var form = this.ambassadorForm.value;\n    for(var prop in form) {\n      if (form.hasOwnProperty(prop) && !form[prop]) {\n        delete form[prop]\n      }\n    }\n    this.ambassador.updateAmbassador(form, id).then( data => {\n      if (data['success']) {\n        this.modalService.dismissAll();\n        this.getAmbassadors();\n      } else {\n        console.log(\"no\", data);\n      }\n    });\n  }\n\n}\n","import { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AmbassadorsComponent } from './ambassadors/ambassadors.component';\n// import { AttendeesComponent } from './attendees/attendees.component';\nimport { EventsComponent } from './events/events.component';\nimport { LocationsComponent } from './locations/locations.component';\nimport { MembersComponent } from './members/members.component';\nimport { MembershipsComponent } from './memberships/memberships.component';\nimport { PlacesComponent } from './places/places.component';\nimport { SurveysComponent } from './surveys/surveys.component';\nimport { UsersComponent } from './users/users.component';\nimport { AboutComponent } from './about/about.component';\nimport { HowComponent } from './how/how.component';\nimport { VieweventsComponent } from './viewevents/viewevents.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst appRoutes: Routes = [\n    { path: '', component: HomeComponent },\n    { path: 'ambassadors', component: AmbassadorsComponent },\n    { path: 'events', component: EventsComponent },\n    { path: 'dashboard', component: DashboardComponent },\n    { path: 'locations', component: LocationsComponent },\n    { path: 'members', component: MembersComponent },\n    { path: 'memberships', component: MembershipsComponent },\n    { path: 'places', component: PlacesComponent },\n    { path: 'surveys', component: SurveysComponent },\n    { path: 'users', component: UsersComponent },\n    { path: 'viewevents', component: VieweventsComponent },\n    { path: 'about', component: AboutComponent },\n    { path: 'how', component: HowComponent },\n\n    // otherwise redirect to home\n    { path: '**', redirectTo: '' }\n];\n\nexport const Routing = RouterModule.forRoot(appRoutes);\n","module.exports = \".nav-item>button,\\n.drop>button {\\n    color: rgb(161, 161, 161);\\n}\\n\\n.nav-item>button:hover,\\n.drop>button:hover {\\n    color: rgb(255, 255, 255);\\n}\\n\\n.about li {\\n    list-style: none;\\n    padding: 5px 0px;\\n    line-height: 2em;\\n}\\n\\n.btn-outline-dark {\\n    border: none;\\n}\\n\\n.content {\\n    background-color: #000;\\n    height:\\n}\\n\\n.footer {\\n    background-color: #000;\\n    color: #ccc;\\n    font-size: .7em;\\n    padding: 30px;\\n    position: fixed;\\n    bottom: 0;\\n    width: 100%;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n        <fa-icon [icon]=\\\"faHome\\\" size=\\\"lg\\\"></fa-icon>\\n        {{ title }}\\n    </a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n        <ul class=\\\"navbar-nav\\\">\\n            <li *ngIf=\\\"authenticated\\\" class=\\\"nav-item\\\">\\n                <button class=\\\"btn btn-outline-dark\\\" routerLink=\\\"/events\\\">Events</button>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <button class=\\\"btn btn-outline-dark\\\" (click)=\\\"open(contentAbout)\\\">About</button>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <button class=\\\"btn btn-outline-dark\\\" (click)=\\\"open(contentHow)\\\">How It Works</button>\\n            </li>\\n        </ul>\\n        <div ngbDropdown class=\\\"d-inline-block drop\\\">\\n            <button class=\\\"btn btn-outline-dark\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>\\n                    <fa-icon [icon]=\\\"faCog\\\" size=\\\"lg\\\"></fa-icon>\\n                </button>\\n            <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\n                <button class=\\\"dropdown-item\\\" routerLink=\\\"/dashboard\\\">Dashboard</button>\\n                <button *ngIf=\\\"userlevel == 'admin'\\\" class=\\\"dropdown-item\\\" routerLink=\\\"/ambassadors\\\">Ambassadors</button>\\n                <!-- <button class=\\\"dropdown-item\\\" routerLink=\\\"/attendees\\\">Attendees</button> -->\\n                <button *ngIf=\\\"userlevel == 'admin'\\\" class=\\\"dropdown-item\\\" routerLink=\\\"/events\\\">Events</button>\\n                <button *ngIf=\\\"userlevel == 'admin'\\\" class=\\\"dropdown-item\\\" routerLink=\\\"/locations\\\">Locations</button>\\n                <button *ngIf=\\\"userlevel == 'admin'\\\" class=\\\"dropdown-item\\\" routerLink=\\\"/members\\\">Members</button>\\n                <button *ngIf=\\\"userlevel == 'admin'\\\" class=\\\"dropdown-item\\\" routerLink=\\\"/memberships\\\">Memberships</button>\\n                <button *ngIf=\\\"userlevel == 'admin'\\\" class=\\\"dropdown-item\\\" routerLink=\\\"/places\\\">Places</button>\\n                <button *ngIf=\\\"userlevel == 'admin'\\\" class=\\\"dropdown-item\\\" routerLink=\\\"/surveys\\\">Surveys</button>\\n                <button *ngIf=\\\"userlevel == 'admin'\\\" class=\\\"dropdown-item\\\" routerLink=\\\"/users\\\">Users</button>\\n                <div class=\\\"dropdown-divider\\\"></div>\\n                <button class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">Logout</button>\\n            </div>\\n        </div>\\n    </div>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\\n<div class=\\\"footer text-center\\\">\\n    <div class=\\\"col\\\">THE SECRET SOCIETY &copy; 2018</div>\\n</div>\\n\\n<ng-template #contentAbout let-modal>\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">About The Secret Society</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row justify-content-md-center\\\">\\n                <div class=\\\"col\\\">\\n                    <p>Based in Los Angeles, the Secret Society is a group of taste makers and lifestyle purveyors from across America who have converged to provide first-class residents of each major city a safe haven to escape the drudgery of a mundane\\n                        social life. It's our mission to provide a choice selection of individuals with an exclusive and upscale environment to relax, network, mix and mingle. We have sought out the cities top power brokers, trendsetters, professionals,\\n                        socially progressive and artistically inclined to join our preferential network. All we ask of our patrons is trust.</p>\\n                    <ul class=\\\"about\\\">\\n                        <li>\\n                            <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> TRUST THAT: Your identity will be protected.</li>\\n                        <li>\\n                            <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> TRUST THAT: You will find our events to be thrilling.</li>\\n                        <li>\\n                            <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> TRUST THAT: You will meet interesting people from all walks of life and backgrounds.</li>\\n                        <li>\\n                            <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> TRUST THAT: You will be assured that our events will be safe and exclusive.</li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n    </div>\\n</ng-template>\\n\\n<ng-template #contentHow let-modal>\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">How It Works</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row justify-content-md-center col\\\">\\n                <ul class=\\\"about\\\">\\n                    <li>\\n                        <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> You have been presented with a membership card because one of our representatives felt you were the kind of socialite we would like to welcome into our network.</li>\\n                    <li>\\n                        <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> Your temporary membership card is activated by visiting our site, clicking \\\"register\\\" and entering the access code on your card.</li>\\n                    <li>\\n                        <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> You will be taken to another screen which will ask for some additional information about you. After this, you will gain access to our private event listings.</li>\\n                    <li>\\n                        <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> Select the upcoming event you would like to attend and either pay for a single guest ticket or join the Secret Society as a member. Even if you select not to purchase a membership, your temporary membership enables you\\n                        to still attend events at a guest's premium. We strive to provide a rich, fulfilling experience for our members and strongly encourage you to consider making the investment to become a Secret Society member.</li>\\n                    <li>\\n                        <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> Bring your NSS card and a valid state-issued driver's license, I.D. or passport to the event with you.</li>\\n                    <li>\\n                        <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> Bring your cellular device with you for ticket processing and membership verification.</li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n    </div>\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\nimport { faHome, faCog, faGraduationCap } from '@fortawesome/free-solid-svg-icons';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit  {\n  title = 'TSS';\n  faHome = faHome;\n  faCog = faCog;\n  faGraduationCap = faGraduationCap;\n  closeResult: string;\n  userlevel: any\n  authenticated: any;\n\n  constructor(private modalService: NgbModal, private router: Router) {\n    if ( !localStorage.getItem('authenticated') )  {\n      this.router.navigate(['/home']);\n    } else{\n      var user = JSON.parse(localStorage.getItem('user'));\n      var authenticated = localStorage.getItem('authenticated');\n      this.userlevel = user['userlevel'];\n      this.authenticated = authenticated;\n    }\n  }\n\n  ngOnInit() {\n    if ( !localStorage.getItem('authenticated') )  {\n      this.router.navigate(['/home']);\n    } else{\n      var user = JSON.parse(localStorage.getItem('user'));\n      var authenticated = localStorage.getItem('authenticated');\n      this.userlevel = user['userlevel'];\n      this.authenticated = authenticated;\n    }\n  }\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', size: 'lg'}).result.then((result) => {});\n  }\n\n  logout() {\n    localStorage.clear();\n    this.router.navigate(['/home']);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { FileSelectDirective } from 'ng2-file-upload';\nimport { Routing } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AngularEditorModule } from '@kolkov/angular-editor';\n// import { NgxStripeModule } from 'ngx-stripe';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { EventsComponent } from './events/events.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LocationsComponent } from './locations/locations.component';\nimport { PlacesComponent } from './places/places.component';\nimport { AmbassadorsComponent } from './ambassadors/ambassadors.component';\nimport { MembershipsComponent } from './memberships/memberships.component';\nimport { SurveysComponent } from './surveys/surveys.component';\nimport { UsersComponent } from './users/users.component';\nimport { MembersComponent } from './members/members.component';\nimport { AttendeesComponent } from './attendees/attendees.component';\nimport { AboutComponent } from './about/about.component';\nimport { HowComponent } from './how/how.component';\nimport { VieweventsComponent } from './viewevents/viewevents.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    EventsComponent,\n    DashboardComponent,\n    LocationsComponent,\n    PlacesComponent,\n    AmbassadorsComponent,\n    MembershipsComponent,\n    SurveysComponent,\n    UsersComponent,\n    MembersComponent,\n    AttendeesComponent,\n    AboutComponent,\n    HowComponent,\n    FileSelectDirective,\n    VieweventsComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgxDatatableModule,\n    HttpClientModule,\n    NgbModule.forRoot(),\n    FontAwesomeModule,\n    ReactiveFormsModule,\n    FormsModule,\n    Routing,\n    BrowserAnimationsModule, // required animations module\n    ToastrModule.forRoot(),\n    AngularEditorModule,\n    // NgxStripeModule.forRoot('pk_test_c0Z0KtNcfkIVEiiKG3DKwgZr'),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  attendees works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-attendees',\n  templateUrl: './attendees.component.html',\n  styleUrls: ['./attendees.component.css']\n})\nexport class AttendeesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export let cfg = {\n    // API Url\n    apiUrl: \"http://localhost:3100\",\n\n    // Formats date correctly\n    dateConverter: (startdate) => {\n        return startdate.month + '/' + startdate.day + '/' + startdate.year\n    },\n\n    // Formats time correctly\n    timeConverter: (starttime) => {\n        var minute = ( starttime.minute < 10 ) ? `0${starttime.minute}` : starttime.minute;\n    \n        if ( starttime.hour > 12 ) {\n          return (starttime.hour - 12) + ':' + minute + \" \" + \"PM\"\n        } else {\n          return starttime.hour + ':' + minute + \" \" + \"AM\"\n        }\n    },\n\n    // States\n    states: [\n        { id: \"AL\", name: \"Alabama\" },\n        { id: \"AK\", name: \"Alaska\" },\n        { id: \"AZ\", name: \"Arizona\" },\n        { id: \"AR\", name: \"Arkansas\" },\n        { id: \"CA\", name: \"California\" },\n        { id: \"CO\", name: \"Colorado\" },\n        { id: \"CT\", name: \"Connecticut\" },\n        { id: \"DE\", name: \"Delaware\" },\n        { id: \"DC\", name: \"District Of Columbia\" },\n        { id: \"FL\", name: \"Florida\" },\n        { id: \"GA\", name: \"Georgia\" },\n        { id: \"HI\", name: \"Hawaii\" },\n        { id: \"ID\", name: \"Idaho\" },\n        { id: \"IL\", name: \"Illinois\" },\n        { id: \"IN\", name: \"Indiana\" },\n        { id: \"IA\", name: \"Iowa\" },\n        { id: \"KS\", name: \"Kansas\" },\n        { id: \"KY\", name: \"Kentucky\" },\n        { id: \"LA\", name: \"Louisiana\" },\n        { id: \"ME\", name: \"Maine\" },\n        { id: \"MD\", name: \"Maryland\" },\n        { id: \"MA\", name: \"Massachusetts\" },\n        { id: \"MI\", name: \"Michigan\" },\n        { id: \"MN\", name: \"Minnesota\" },\n        { id: \"MS\", name: \"Mississippi\" },\n        { id: \"MO\", name: \"Missouri\" },\n        { id: \"MT\", name: \"Montana\" },\n        { id: \"NE\", name: \"Nebraska\" },\n        { id: \"NV\", name: \"Nevada\" },\n        { id: \"NH\", name: \"New Hampshire\" },\n        { id: \"NJ\", name: \"New Jersey\" },\n        { id: \"NM\", name: \"New Mexico\" },\n        { id: \"NY\", name: \"New York\" },\n        { id: \"NC\", name: \"North Carolina\" },\n        { id: \"ND\", name: \"North Dakota\" },\n        { id: \"OH\", name: \"Ohio\" },\n        { id: \"OK\", name: \"Oklahoma\" },\n        { id: \"OR\", name: \"Oregon\" },\n        { id: \"PA\", name: \"Pennsylvania\" },\n        { id: \"RI\", name: \"Rhode Island\" },\n        { id: \"SC\", name: \"South Carolina\" },\n        { id: \"SD\", name: \"South Dakota\" },\n        { id: \"TN\", name: \"Tennessee\" },\n        { id: \"TX\", name: \"Texas\" },\n        { id: \"UT\", name: \"Utah\" },\n        { id: \"VT\", name: \"Vermont\" },\n        { id: \"VA\", name: \"Virginia\" },\n        { id: \"WA\", name: \"Washington\" },\n        { id: \"WV\", name: \"West Virginia\" },\n        { id: \"WI\", name: \"Wisconsin\" },\n        { id: \"WY\", name: \"Wyoming\" }\n    ]\n};","module.exports = \"h2 {\\n    color: white;\\n    font-size: 1em;\\n}\\n\\nh3 {\\n    font-size: 1.5em;\\n    padding-bottom: 20px;\\n}\\n\\nh4 {\\n    font-size: .9em;\\n    text-decoration: underline;\\n}\\n\\nh5 {\\n    font-size: .8em;\\n    text-decoration: underline;\\n}\\n\\n.container-fluid {\\n    margin-top: 30px;\\n    color: #000;\\n    padding: 0px 40px;\\n    /* background-color: #fff; */\\n}\\n\\n.tab-account,\\n.tab-membership,\\n.tab-survey {\\n    padding: 20px;\\n}\\n\\nform.checkout {\\n    max-width: 500px;\\n    margin: 2rem auto;\\n    text-align: center;\\n    border: 2px solid #eee;\\n    border-radius: 8px;\\n    padding: 1rem 2rem;\\n    background: white;\\n    font-family: monospace;\\n    color: #525252;\\n    font-size: 1.1rem;\\n}\\n\\nform.checkout button {\\n    padding: 0.5rem 1rem;\\n    color: white;\\n    background: coral;\\n    border: none;\\n    border-radius: 4px;\\n    margin-top: 1rem;\\n}\\n\\nform.checkout button:active {\\n    background: rgb(165, 76, 43);\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <h3>Dashboard</h3>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <ngb-tabset #t=\\\"ngbTabset\\\">\\n                <ngb-tab id=\\\"tab-account\\\" title=\\\"Account Info\\\">\\n                    <ng-template ngbTabContent>\\n                        <div class=\\\"row tab-account\\\">\\n                            <div class=\\\"col\\\">\\n                                <h4>Customer</h4>\\n                                <p>{{ user.first_name || \\\"First Name\\\" }} {{ user.last_name || \\\"Last Name\\\" }} <span class=\\\"badge badge-primary\\\"> {{ user.userlevel }} </span></p>\\n\\n                                <h4>Address</h4>\\n                                <p>{{ user.address || \\\"Street Address\\\" }}<br/> {{ user.city || \\\"City\\\" }}, {{ user.state || \\\"State\\\" }} {{user.zip || \\\"Zip\\\"}}</p>\\n\\n                                <h4>Email</h4>\\n                                <p>{{ user.email || \\\"Email\\\" }}</p>\\n\\n                                <h4>Phone</h4>\\n                                <p>{{ user.phone || \\\"Phone\\\" }}</p>\\n                            </div>\\n                            <div class=\\\"col text-right\\\">\\n                                <button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"open(contentAddress)\\\">\\n                                    <fa-icon [icon]=\\\"faEdit\\\"></fa-icon>\\n                                    Edit Account Info\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </ng-template>\\n                </ngb-tab>\\n\\n                <ngb-tab id=\\\"tab-membership\\\" title=\\\"Membership\\\">\\n                    <ng-template ngbTabContent>\\n                        <div class=\\\"row tab-membership\\\">\\n                            <div class=\\\"col\\\">\\n                                <h4>Membership</h4>\\n                                <p>{{ member?.name }} <span class=\\\"badge badge-primary\\\">{{ member?.status }}</span></p>\\n\\n                                <h4>Description</h4>\\n                                <p [innerHTML]=\\\"member?.description\\\"></p>\\n\\n                                <h4>Frequency</h4>\\n                                <p>{{ member?.frequency }}</p>\\n\\n                                <h4>Cost</h4>\\n                                <p>{{ member?.cost | currency }}</p>\\n\\n                                <h4>Cost Per Event</h4>\\n                                <p>{{ member?.cost_per_event | percent }}</p>\\n                            </div>\\n                            <div class=\\\"col text-right\\\">\\n                                <button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"open(contentMembership)\\\">\\n                                    <fa-icon [icon]=\\\"faEdit\\\"></fa-icon>\\n                                    Change Membership\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </ng-template>\\n                </ngb-tab>\\n\\n                <ngb-tab id=\\\"tab-survey\\\" title=\\\"Survey\\\">\\n                    <ng-template ngbTabContent>\\n                        <div class=\\\"row tab-survey\\\">\\n                            <div class=\\\"col\\\">\\n                                <h4>Ethnicity</h4>\\n                                <p>{{ survey?.ethnicity }}</p>\\n\\n                                <h4>Gender</h4>\\n                                <p>{{ survey?.gender }}</p>\\n\\n                                <h4>Income</h4>\\n                                <p>{{ survey?.income }}</p>\\n\\n                                <h4>Employment</h4>\\n                                <p>{{ survey?.employment }}</p>\\n\\n                                <h4>Sports</h4>\\n                                <p>{{ survey?.sports }}</p>\\n\\n                                <h4>Travel</h4>\\n                                <p>{{ survey?.travel }}</p>\\n                            </div>\\n                            <div class=\\\"col\\\">\\n                                <h4>Fashion</h4>\\n                                <p>{{ survey?.fashion }}</p>\\n\\n                                <h4>Technology</h4>\\n                                <p>{{ survey?.technology }}</p>\\n\\n                                <h4>Arts</h4>\\n                                <p>{{ survey?.arts }}</p>\\n\\n                                <h4>Fitness</h4>\\n                                <p>{{ survey?.fitness }}</p>\\n\\n                                <h4>Food</h4>\\n                                <p>{{ survey?.food }}</p>\\n\\n                                <h4>Interest</h4>\\n                                <p>{{ survey?.interest }}</p>\\n\\n                                <!-- <h4>Listen</h4>\\n                                <p>{{ survey?.listen }}</p> -->\\n                            </div>\\n                            <div class=\\\"col text-right\\\">\\n                                <button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"open(contentSurvey)\\\">\\n                                    <fa-icon [icon]=\\\"faEdit\\\"></fa-icon> Edit Survey\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </ng-template>\\n                </ngb-tab>\\n            </ngb-tabset>\\n        </div>\\n\\n        <div class=\\\"col\\\">\\n            <h3>Your Events</h3>\\n            <table class=\\\"table table-hover table-striped\\\">\\n                <thead>\\n                    <tr>\\n                        <th scope=\\\"col\\\">FLYER</th>\\n                        <th scope=\\\"col\\\">NAME</th>\\n                        <th scope=\\\"col\\\">WHEN</th>\\n                        <th scope=\\\"col\\\">PLACE</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let event of uevents\\\">\\n                        <td><img (click)=\\\"open(contentPreview, event)\\\" class=\\\"img-thumbnail\\\" width=\\\"50\\\" height=\\\"50\\\" [src]=\\\"event?.url\\\" onerror=\\\"this.src='https://placeimg.com/640/480/people'\\\" /></td>\\n                        <td (click)=\\\"open(contentView, event, 'event')\\\">{{ event?.name }}</td>\\n                        <td>{{ event?.event_date }}<br/>{{ event?.start_time }} - {{ event?.end_time }}</td>\\n                        <td>{{ event?.place }}</td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n<!-- Edit Address -->\\n<ng-template #contentAddress let-modal>\\n    <div class=\\\"modal-header bg-info\\\">\\n        <h2 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Contact Info</h2>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <form [formGroup]=\\\"addressForm\\\" (ngSubmit)=\\\"onUpdateUser(user.id)\\\">\\n\\n                <!-- Address field -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Address</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"address\\\" [value]=\\\"user?.address\\\" class=\\\"form-control\\\" />\\n                </div>\\n\\n                <!-- City field -->\\n                <div class=\\\"form-group\\\">\\n                    <label>City</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"city\\\" [value]=\\\"user.city\\\" class=\\\"form-control\\\" />\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label>State</label>\\n                    <select class=\\\"form-control\\\" formControlName=\\\"state\\\" [value]=\\\"user.state\\\">\\n                        <option value=\\\"{{state.id}}\\\" *ngFor=\\\"let state of states\\\">{{state.name}}</option>\\n                    </select>\\n                </div>\\n\\n                <!-- Cost Per field -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Zip</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"zip\\\" [value]=\\\"user.zip\\\" class=\\\"form-control\\\" />\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label>Email</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"email\\\" [value]=\\\"user.email\\\" class=\\\"form-control\\\" />\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label>Phone</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"phone\\\" [value]=\\\"user.phone\\\" class=\\\"form-control\\\" />\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label cfor=\\\"birthday\\\">Birthday</label>\\n                    <div class=\\\"input-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"birthday\\\" placeholder=\\\"mm/dd/yyyy\\\" name=\\\"dp\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\" required>\\n                        <div class=\\\"input-group-append\\\">\\n                            <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\"><fa-icon [icon]=\\\"faCalendar\\\"></fa-icon></button>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <!-- Create event button -->\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-outline-primary\\\">Update Address</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n    </div>\\n</ng-template>\\n\\n<!-- Edit Membership -->\\n<ng-template #contentMembership let-modal>\\n    <div class=\\\"modal-header bg-info\\\">\\n        <h2 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Membership Info</h2>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <ngb-accordion [closeOthers]=\\\"true\\\" activeIds=\\\"static-1\\\">\\n                <ngb-panel id=\\\"{{membership.id}}\\\" *ngFor=\\\"let membership of memberships\\\">\\n                    <ng-template ngbPanelTitle>{{ membership.name }}</ng-template>\\n                    <ng-template ngbPanelContent>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col\\\" [innerHTML]=\\\"membership.description\\\"></div>\\n                            <div class=\\\"col\\\">\\n                                <h5>Membership Cost</h5>\\n                                <p>{{ membership.cost | currency }}</p>\\n                                <h5>Payment Frequency</h5>\\n                                <p>{{ membership.frequency }}</p>\\n                                <h5>Discount Off Events</h5>\\n                                <p>{{ membership.cost_per_event | percent }}</p>\\n                                <!-- <form action=\\\"\\\" method=\\\"POST\\\">\\n                                    <script src=\\\"https://checkout.stripe.com/checkout.js\\\" class=\\\"stripe-button\\\" data-key=\\\"pk_test_c0Z0KtNcfkIVEiiKG3DKwgZr\\\" data-amount=\\\"membership.cost\\\" data-name=\\\"membership.name\\\" data-description=\\\"membership.description\\\" data-locale=\\\"auto\\\" data-currency=\\\"usd\\\"></script>\\n                                </form> -->\\n                                <button class=\\\"btn btn-primary\\\" (click)=\\\"open(contentConfirmMembership, membership, 'membership')\\\">Select this Membership</button>\\n\\n                            </div>\\n                        </div>\\n                    </ng-template>\\n                </ngb-panel>\\n            </ngb-accordion>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n    </div>\\n</ng-template>\\n\\n<!-- Edit Survey -->\\n<ng-template #contentSurvey let-modal>\\n    <div class=\\\"modal-header bg-info\\\">\\n        <h2 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Survey</h2>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <form [formGroup]=\\\"surveyForm\\\" (ngSubmit)=\\\"onUpdateSurvey()\\\">\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"ethnicity\\\">Ethnicity</label>\\n                    <select formControlName=\\\"ethnicity\\\" class=\\\"form-control\\\" [value]=\\\"survey?.ethnicity\\\">\\n                                <option value=\\\"\\\"></option>\\n                                <option value=\\\"African American\\\">African American</option>\\n                                <option value=\\\"White\\\">White</option>\\n                                <option value=\\\"Hispanic\\\">Hispanic</option>\\n                                <option value=\\\"Asian\\\">Asian</option>\\n                                <option value=\\\"Other\\\">Other</option>\\n                            </select>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"gender\\\">Gender</label>\\n                    <select formControlName=\\\"gender\\\" class=\\\"form-control\\\" [value]=\\\"survey?.gender\\\">\\n                                <option value=\\\"\\\"></option>\\n                                <option value=\\\"Male\\\">Male</option>\\n                                <option value=\\\"Female\\\">Female</option>\\n                            </select>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"income\\\">Median Household Income</label>\\n                    <select formControlName=\\\"income\\\" class=\\\"form-control\\\" [value]=\\\"survey?.income\\\">\\n                                <option value=\\\"\\\"></option>\\n                                <option value=\\\"$10,000 - $20,000\\\">$10,000 - $20,000</option>\\n                                <option value=\\\"$21,000 - $35,000\\\">$21,000 - $35,000</option>\\n                                <option value=\\\"$36,000 - $50,000\\\">$36,000 - $50,000</option>\\n                                <option value=\\\"$51,000 - $80,000\\\">$51,000 - $80,000</option>\\n                                <option value=\\\"$81,00 - $100,000\\\">$81,00 - $100,000</option>\\n                                <option value=\\\"Over $100,000\\\">Over $100,000</option>\\n                            </select>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"employment\\\">Employment</label>\\n                    <select formControlName=\\\"employment\\\" class=\\\"form-control\\\" [value]=\\\"survey?.employment\\\">\\n                                <option value=\\\"\\\"></option>\\n                                <option value=\\\"Banking\\\">Banking</option>\\n                                <option value=\\\"Education\\\">Education</option>\\n                                <option value=\\\"Media\\\">Media/Entertainment/Arts</option>\\n                                <option value=\\\"Self\\\">Self-Employed</option>\\n                                <option value=\\\"IT\\\">Information Technology</option>\\n                                <option value=\\\"Medical\\\">Medical Field</option>\\n                                <option value=\\\"State\\\">State Employee</option>\\n                                <option value=\\\"Health\\\">Health and Beauty</option>\\n                                <option value=\\\"Real Estate\\\">Real Estate/Construction</option>\\n                                <option value=\\\"Service\\\">Service/Hospitality</option>\\n                                <option value=\\\"Other\\\">Other</option>\\n                            </select>\\n                </div>\\n\\n                <legend>Interest</legend>\\n\\n                <!-- Select Basic -->\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"sports\\\">Sports</label>\\n                    <select formControlName=\\\"sports\\\" class=\\\"form-control\\\" [value]=\\\"survey?.sports\\\">\\n                                <option value=\\\"\\\"></option>\\n                                <option value=\\\"None\\\">None</option>\\n                                <option value=\\\"Baseball\\\">Baseball</option>\\n                                <option value=\\\"Basketball\\\">Basketball</option>\\n                                <option value=\\\"Football\\\">Football</option>\\n                                <option value=\\\"Golf\\\">Golf</option>\\n                                <option value=\\\"Tennis\\\">Tennis</option>\\n                                <option value=\\\"Running\\\">Running</option>\\n                                <option value=\\\"Cycling\\\">Cycling</option>\\n                            </select>\\n                </div>\\n\\n                <!-- Select Basic -->\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"travel\\\">Travel</label>\\n                    <select formControlName=\\\"travel\\\" class=\\\"form-control\\\" [value]=\\\"survey?.travel\\\">\\n                                <option value=\\\"\\\"></option>\\n                                <option value=\\\"None\\\">None</option>\\n                                <option value=\\\"Vacations\\\">Vacation Excursions</option>\\n                                <option value=\\\"Tourisms\\\">International Tourism</option>\\n                                <option value=\\\"Travel\\\">Conventions &amp; Business Travel</option>\\n                            </select>\\n                </div>\\n\\n                <!-- Select Basic -->\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"fashion\\\">Fashion</label>\\n                    <select formControlName=\\\"fashion\\\" class=\\\"form-control\\\" [value]=\\\"survey?.fashion\\\">\\n                                <option value=\\\"\\\"></option>\\n                                <option value=\\\"None\\\">None</option>\\n                                <option value=\\\"Clothes\\\">Designer Clothes</option>\\n                                <option value=\\\"Jewelry\\\">Jewelry</option>\\n                                <option value=\\\"Shoes\\\">Shoes</option>\\n                                <option value=\\\"Fragrances\\\">Fine Fragrances &amp; Cosmetics</option>\\n                                <option value=\\\"Urban Wear\\\">Urban Wear</option>\\n                            </select>\\n                </div>\\n\\n                <!-- Select Basic -->\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"technology\\\">Technology</label>\\n                    <select formControlName=\\\"technology\\\" class=\\\"form-control\\\" [value]=\\\"survey?.technology\\\">\\n                                <option value=\\\"\\\"></option>\\n                                <option value=\\\"None\\\">None</option>\\n                                <option value=\\\"Software\\\">Computers &amp; Software</option>\\n                                <option value=\\\"Cellphone\\\">Cell Phones</option>\\n                                <option value=\\\"Internet\\\">Web Surfing/Internet</option>\\n                                <option value=\\\"Communication\\\">Wireless Communication</option>\\n                            </select>\\n                </div>\\n\\n                <!-- Select Basic -->\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"arts\\\">Arts &amp; Entertainment</label>\\n                    <select formControlName=\\\"arts\\\" class=\\\"form-control\\\" [value]=\\\"survey?.arts\\\">\\n                                <option value=\\\"\\\"></option>\\n                                <option value=\\\"None\\\">None</option>\\n                                <option value=\\\"Literatture\\\">Literature</option>\\n                                <option value=\\\"Art\\\">Art Galleries</option>\\n                                <option value=\\\"Performing Arts\\\">Performing Arts</option>\\n                                <option value=\\\"Video Games\\\">Video Games</option>\\n                                <option value=\\\"Automobiles\\\">Automobiles</option>\\n                                <option value=\\\"Museums\\\">Museums</option>\\n                                <option value=\\\"Night Clubs\\\">Night Clubs</option>\\n                                <option value=\\\"Movies\\\">Movies/Films</option>\\n                                <option value=\\\"Bookstore\\\">Bookstore</option>\\n                                <option value=\\\"Motorcycles\\\">Motorcycles</option>\\n                            </select>\\n                </div>\\n\\n                <!-- Select Basic -->\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"health\\\">Health, Beauty, Fitness</label>\\n                    <select formControlName=\\\"fitness\\\" class=\\\"form-control\\\" [value]=\\\"survey?.fitness\\\">\\n                                <option value=\\\"\\\"></option>\\n                                <option value=\\\"None\\\">None</option>\\n                                <option value=\\\"Beautician\\\">Beautician/Esthetician</option>\\n                                <option value=\\\"Manicurist\\\">Manicurist</option>\\n                                <option value=\\\"Barber\\\">Barber Shops</option>\\n                                <option value=\\\"Fitness\\\">Fitness Clubs</option>\\n                                <option value=\\\"Nutrition\\\">Nutrition</option>\\n                            </select>\\n                </div>\\n\\n                <!-- Select Basic -->\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"food\\\">Food &amp; Libations</label>\\n                    <select formControlName=\\\"food\\\" class=\\\"form-control\\\" [value]=\\\"survey?.food\\\">\\n                                <option value=\\\"\\\"></option>\\n                                <option value=\\\"None\\\">None</option>\\n                                <option value=\\\"Dining\\\">Dining Out</option>\\n                                <option value=\\\"Cigars\\\">Cigars &amp; Cigarettes</option>\\n                                <option value=\\\"Fine Wine\\\">Fine Wines &amp; Alcohol</option>\\n                            </select>\\n                </div>\\n\\n                <!-- Select Basic -->\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"interest\\\">What Type of Events Interest You Most?</label>\\n                    <select formControlName=\\\"interest\\\" class=\\\"form-control\\\" [value]=\\\"survey?.interest\\\">\\n                                <option value=\\\"\\\"></option>\\n                                <option value=\\\"None\\\">None</option>\\n                                <option value=\\\"Dining\\\">Dining Out</option>\\n                                <option value=\\\"Cigars\\\">Cigars &amp; Cigarettes</option>\\n                                <option value=\\\"Fine Wine\\\">Fine Wine &amp; Alcohol</option>\\n                                <option value=\\\"Concerts\\\">Concerts</option>\\n                                <option value=\\\"Comedy\\\">Comedy</option>\\n                                <option value=\\\"Live Music\\\">Live Music</option>\\n                            </select>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-outline-primary\\\">Save Survey</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n    </div>\\n</ng-template>\\n\\n<!-- Event View -->\\n<ng-template #contentView let-modal>\\n    <div class=\\\"modal-header bg-primary\\\">\\n        <h2 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ modevent?.name }}</h2>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <img class=\\\"img\\\" width=\\\"100%\\\" [src]=\\\"modevent?.url\\\" onerror=\\\"this.src='https://placeimg.com/640/480/people'\\\" />\\n                </div>\\n                <div class=\\\"col\\\">\\n                    Date:<br/> {{ modevent?.event_date }} <br/><br/> Time:\\n                    <br/> {{ modevent?.start_time }} - {{ modevent?.end_time }}\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    Description:<br/> {{ modevent?.description }}\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n    </div>\\n</ng-template>\\n\\n<!-- Preview event flyer -->\\n<ng-template #contentPreview let-modal>\\n    <div class=\\\"modal-header bg-info\\\">\\n        <h2 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ modevent.name }}</h2>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <img class=\\\"img\\\" width=\\\"100%\\\" [src]=\\\"modevent?.url\\\" onerror=\\\"this.src='https://placeimg.com/640/480/people'\\\" />\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n    </div>\\n</ng-template>\\n\\n\\n<ng-template #contentConfirmMembership let-modal>\\n    <div class=\\\"modal-header bg-primary\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Membership Confirmation</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                Are you sure you want to subscribe to &nbsp;<strong>{{ modmem.name }}</strong>?\\n            </div>\\n            <div class=\\\"row\\\">\\n                <form #checkout=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(checkout)\\\" class=\\\"checkout\\\">\\n                    <div class=\\\"form-row\\\">\\n                        <label for=\\\"card-info\\\">Card Info</label>\\n                        <div id=\\\"card-info\\\" #cardInfo></div>\\n\\n                        <div id=\\\"card-errors\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">{{ error }}</div>\\n                    </div>\\n                    <button type=\\\"submit\\\">Pay $777</button>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"selectMembership(modmem.plan_id); modal.close()\\\">Yes</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">No</button>\\n    </div>\\n</ng-template>\"","import { Router } from '@angular/router';\nimport { Component, OnInit, OnChanges, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { faCalendar, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { StripeService, Elements, Element as StripeElement, ElementsOptions } from \"ngx-stripe\";\n// import { StripeService, StripeCardComponent,  ElementOptions, ElementsOptions, Element as StripeElement, } from \"ngx-stripe\";\nimport { cfg } from './../config';\nimport { UserService } from '../users/user.service';\nimport { SurveyService } from '../surveys/survey.service';\nimport { MemberService } from '../members/member.service';\nimport { MembershipService } from '../memberships/membership.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, OnChanges {\n  // @ViewChild('cardInfo') cardInfo: ElementRef;\n  card: any;\n  // cardHandler = this.onChange.bind(this);\n  error: string;\n\n  user: any;\n  states: any;\n  survey: any;\n  member: any;\n  memberships: any;\n  uevents: any;\n  modevent: any;\n  modmem: any;\n  surveyForm: FormGroup;\n  addressForm: FormGroup;\n  faCalendar = faCalendar;\n  faEdit = faEdit;\n\n  constructor(\n    private formBuilder: FormBuilder, \n    private modalService: NgbModal, \n    private userservice: UserService,\n    private surveyservice: SurveyService,\n    private memberservice: MemberService,\n    private membership: MembershipService,\n    private router: Router,\n    private toastr: ToastrService,\n    private cd: ChangeDetectorRef\n  ) {\n    this.user = JSON.parse(localStorage.getItem('user'));\n    var csurvey = JSON.parse(localStorage.getItem('survey'));\n    var cmember = JSON.parse(localStorage.getItem('member'));\n    var cevents = JSON.parse(localStorage.getItem('uevents'));\n    this.states = cfg.states;\n    \n    if (csurvey) this.survey = csurvey;\n    else this.getSurvey();\n\n    if (cmember) this.member = cmember;\n    else this.getMember();\n\n    if (cevents) this.uevents = cevents;\n    else this.getEvents();\n  }\n\n  ngOnChanges() {\n    if ( !JSON.parse(localStorage.getItem('authenticated')) ) this.router.navigate(['/home']); \n  }\n\n  ngOnInit() {\n    this.user = JSON.parse(localStorage.getItem('user'));\n    var csurvey = JSON.parse(localStorage.getItem('survey'));\n    var cmember = JSON.parse(localStorage.getItem('member'));\n    var cevents = JSON.parse(localStorage.getItem('uevents'));\n    this.states = cfg.states;\n    \n    if (csurvey) this.survey = csurvey;\n    else this.getSurvey();\n\n    if (cmember) this.member = cmember;\n    else this.getMember();\n\n    if (cevents) this.uevents = cevents;\n    else this.getEvents();\n\n    this.membership.getMemberships().then( data => this.memberships = data['items'] );\n    this.addressForm = this.formBuilder.group({ address: '', city: '', state: '', zip: '', email: '', phone: '', birthday: '' });\n    this.surveyForm = this.formBuilder.group({ ethnicity: '', gender: '', income: '', employment: '', birthday: '', sports: '', travel: '', fashion: '', technology: '', arts: '', fitness: '', food: '', interest: '', listen: '' });\n  }\n\n  // ngAfterViewInit() {\n  //   this.card = elements.create('card');\n  //   this.card.mount(this.cardInfo.nativeElement);\n\n  //   this.card.addEventListener('change', this.cardHandler);\n  // }\n\n  // ngOnDestroy() {\n  //   this.card.removeEventListener('change', this.cardHandler);\n  //   this.card.destroy();\n  // }\n\n  // onChange({ error }) {\n  //   if (error) {\n  //     this.error = error.message;\n  //   } else {\n  //     this.error = null;\n  //   }\n  //   this.cd.detectChanges();\n  // }\n\n  // async onSubmit(form: NgForm) {\n  //   const { token, error } = await stripe.createToken(this.card);\n\n  //   if (error) {\n  //     console.log('Something is wrong:', error);\n  //   } else {\n  //     console.log('Success!', token);\n  //     // ...send the token to the your backend to process the charge\n  //   }\n  // }\n\n  // onSubmit() {\n  //   console.log('onSubmit');\n  // }\n\n\n  getUser() {\n    this.userservice.getUser(this.user.id).then( data => {\n      if ( data['success'] ) {\n        localStorage.setItem('user', JSON.stringify(data['data']));\n        this.user = data['data'];\n      }\n    }).catch( e => console.log(e.error));\n  }\n\n  getSurvey() {\n    this.surveyservice.getSurvey(this.user.id).then( data => {\n      if ( data['success'] ) {\n        localStorage.setItem('survey', JSON.stringify(data['data']));\n        this.survey = data['data'];\n      }\n    }).catch( e => console.log(e.error));\n  }\n\n  getMember() {\n    this.memberservice.getMember(this.user.id).then( data => {\n      if ( data['success'] ) {\n        localStorage.setItem('member', JSON.stringify(data['data']));\n        this.member = data['data'];\n      }\n    }).catch( e => console.log(e.error));\n  }\n\n  getEvents() {\n    this.userservice.getEventsByUser(this.user.id).then( data => {\n      if ( data['success'] ) {\n        localStorage.setItem('uevents', JSON.stringify(data['data']));\n        this.uevents = data['data'];\n      }\n    }).catch( e => console.log(e.error));\n  }\n\n  open(content, item, type) {\n    if (item != null) {\n      if ( type == 'event' ) this.modevent = item;\n      if ( type == 'membership' ) this.modmem = item;\n    }\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', size: 'lg'}).result.then((result) => {});\n  }\n\n  onUpdateSurvey() {\n    var form = this.surveyForm.value;\n    for(var prop in form) {\n      if (form.hasOwnProperty(prop) && !form[prop]) {\n        delete form[prop]\n      }\n    }\n    \n    this.surveyservice.updateSurvey(form, this.user.id).then( data => {\n      if ( data['success'] ) {\n        this.modalService.dismissAll();\n        this.getSurvey();\n        this.showSuccess(data['message'], \"Survey Update\");\n      } else {\n        this.showFailure(data['message'], \"Survey Update\");\n      }\n    }).catch( e => console.log(e.error));\n  }\n\n  onUpdateUser(id) {\n    var form = this.addressForm.value;\n    for(var prop in form) {\n      if (form.hasOwnProperty(prop) && !form[prop]) {\n        delete form[prop]\n      }\n    }\n    if (form['birthday']) form.birthday = cfg.dateConverter(form.birthday);\n    this.userservice.updateUser(form, id).then( data => {\n      if (data['success']) {\n        localStorage.setItem('user', JSON.stringify(data['data']));\n        this.user = data['data'];\n        this.modalService.dismissAll();\n        this.getUser();\n        this.showSuccess(data['message'], \"Account Update\");\n      } else {\n        this.showFailure(data['message'], \"Account Update\");\n      }\n    })\n    .catch(e => console.log(e.error));\n  }\n\n  selectMembership(plan) {\n    console.log(this.user.customer_id, plan);\n    this.userservice.subscribeToMembership(this.user.customer_id, plan).then( data => {\n      var sub = data['data'];\n      console.log(\"Select Membership: \", sub);\n      this.memberservice.updateMember(sub.id).then( data => {\n        this.getMember();\n      }).catch(e => console.log(e.error));\n    }).catch( e => console.log(\"Select Membership: \", e.error))\n  }\n\n  showSuccess(msg, title) {\n    this.toastr.success(msg, title);\n  }\n\n  showFailure(msg, title) {\n    this.toastr.error(msg, title);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  apiUrl = \"https://solutetech.io\";\n\n  constructor(private http: HttpClient) { }\n\n  getEvents() {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/events`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  getEvent(id) {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/events/${id}`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  addEvent(form) {\n    return new Promise( ( resolve ) => {\n      this.http.post(`${this.apiUrl}/events`, form)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  updateEvent(form, id) {\n    return new Promise( ( resolve ) => {\n      this.http.patch(`${this.apiUrl}/events/${id}`, form)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  deleteEvent(id) {\n    return new Promise( ( resolve ) => {\n      this.http.delete(`${this.apiUrl}/events/${id}`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n}\n","module.exports = \".container-fluid {\\n    margin-top: 50px;\\n    color: #000;\\n    padding: 0px 40px;\\n}\\n\\n.add-row {\\n    padding-bottom: 10px;\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <h3>Events</h3>\\n    </div>\\n    <div class=\\\"row add-row\\\">\\n        <div class=\\\"col\\\"></div>\\n        <div class=\\\"col text-right\\\">\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"open(contentNew, null)\\\"><fa-icon [icon]=\\\"faPlusCircle\\\"></fa-icon> Add New Event</button>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <table class=\\\"table table-light table-striped table-hover\\\">\\n            <thead>\\n                <tr>\\n                    <th scope=\\\"col\\\">FLYER</th>\\n                    <th scope=\\\"col\\\">NAME</th>\\n                    <th scope=\\\"col\\\">WHEN</th>\\n                    <th scope=\\\"col\\\">LOCATION</th>\\n                    <th scope=\\\"col\\\">PLACE</th>\\n                    <th scope=\\\"col\\\">COST</th>\\n                    <th></th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let event of events\\\">\\n                    <td><img (click)=\\\"open(contentPreview, event)\\\" class=\\\"img-thumbnail\\\" width=\\\"50\\\" height=\\\"50\\\" [src]=\\\"event?.url\\\" onerror=\\\"this.src='https://placeimg.com/640/480/people'\\\" /></td>\\n                    <td (click)=\\\"open(contentView, event)\\\">{{ event.name }}</td>\\n                    <td>\\n                        {{ event.event_date }}<br/>{{ event.start_time }} - {{ event.end_time }}\\n                    </td>\\n                    <td>{{ event.location }}</td>\\n                    <td>{{ event.place }}</td>\\n                    <td>{{ event.cost | currency }}</td>\\n                    <td>\\n                        <button class=\\\"btn btn-info\\\" (click)=\\\"open(contentEdit, event)\\\">\\n                            <fa-icon [icon]=\\\"faEdit\\\"></fa-icon>\\n                        </button>&nbsp;\\n                        <button class=\\\"btn btn-danger\\\" (click)=\\\"open(contentDelete, event)\\\">\\n                            <fa-icon [icon]=\\\"faTrash\\\"></fa-icon>\\n                        </button>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\\n<!-- Create New Modal -->\\n<ng-template #contentNew let-modal>\\n    <div class=\\\"modal-header bg-success\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Create an Event</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <form [formGroup]=\\\"eventForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                <!-- Event Location -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Location</label>\\n                    <select class=\\\"form-control\\\" formControlName=\\\"location_id\\\" #l (change)=\\\"getPlacesByLocation(l.value)\\\" required>\\n                        <option value=\\\"\\\">Select a location</option>\\n                        <option value=\\\"{{location.id}}\\\" *ngFor=\\\"let location of locations\\\">{{location.name}}</option>\\n                    </select>\\n                </div>\\n\\n                <!-- Event Name -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <!-- Event Desription -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Description</label>\\n                    <!-- <textarea formControlName=\\\"description\\\" class=\\\"form-control\\\"></textarea> -->\\n                    <angular-editor formControlName=\\\"description\\\" [config]=\\\"editorConfig\\\"></angular-editor>\\n                </div>\\n\\n                <!-- Event date -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Event Date</label>\\n                    <div class=\\\"input-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"event_date\\\" placeholder=\\\"mm/dd/yyyy\\\" name=\\\"dp\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\" required>\\n                        <div class=\\\"input-group-append\\\">\\n                            <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\"><fa-icon [icon]=\\\"faCalendar\\\"></fa-icon></button>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <!-- Start and End time -->\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            <label>Start Time</label>\\n                            <ngb-timepicker formControlName=\\\"start_time\\\" [meridian]=\\\"meridian\\\" required></ngb-timepicker>\\n                        </div>\\n                        <div class=\\\"col\\\">\\n                            <label>End Time</label>\\n                            <ngb-timepicker formControlName=\\\"end_time\\\" [meridian]=\\\"meridian\\\" required></ngb-timepicker>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <!-- Flyer upload -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Upload Event Flyer</label>\\n                    <div class=\\\"input-group\\\">\\n                        <input type=\\\"file\\\" name=\\\"photo\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n                        <div class=\\\"input-group-append\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\" (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n                                Upload an Image\\n                            </button>\\n                        </div>\\n                        <div class=\\\"input-group\\\">\\n                            <img *ngIf=\\\"previewflyer\\\" [src]=\\\"previewflyer\\\" width=\\\"200\\\" height=\\\"200\\\" />\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <!-- Cost field -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Cost</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"cost\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <!-- Event Place -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Place</label>\\n                    <select class=\\\"form-control\\\" formControlName=\\\"place_id\\\" required>\\n                        <option value=\\\"\\\">Select a place</option>\\n                        <option value=\\\"{{place.id}}\\\" *ngFor=\\\"let place of places\\\">{{place.name}}</option>\\n                    </select>\\n                </div>\\n\\n                <!-- Create event button -->\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-outline-primary\\\" *ngIf=\\\"eventForm.valid\\\">Create Event</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Cancel</button>\\n    </div>\\n</ng-template>\\n\\n<!-- Delete Modal -->\\n<ng-template #contentDelete let-modal>\\n    <div class=\\\"modal-header bg-danger\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Delete Confirmation</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            Are you sure you want to delete <strong>{{ modevent.name }}</strong>?\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"delete(modevent.id); modal.close()\\\">Yes</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">No</button>\\n    </div>\\n</ng-template>\\n\\n<ng-template #contentView let-modal>\\n    <div class=\\\"modal-header bg-primary\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ modevent.name }}</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\n                          </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <img class=\\\"img\\\" width=\\\"100%\\\" [src]=\\\"modevent?.url\\\" onerror=\\\"this.src='https://placeimg.com/640/480/people'\\\" />\\n                </div>\\n                <div class=\\\"col\\\">\\n                    Date:<br/> {{ modevent.event_date }} <br/><br/> Time:\\n                    <br/> {{ modevent.start_time }} - {{ modevent.end_time }}\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\" [innerHTML]=\\\"modevent.description\\\">\\n                    Description:\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n    </div>\\n</ng-template>\\n\\n<ng-template #contentPreview let-modal>\\n    <div class=\\\"modal-header bg-info\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Update Event</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <img class=\\\"img\\\" width=\\\"100%\\\" [src]=\\\"modevent?.url\\\" onerror=\\\"this.src='https://placeimg.com/640/480/people'\\\" />\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n    </div>\\n</ng-template>\\n\\n<!-- Update Event information -->\\n<ng-template #contentEdit let-modal>\\n    <div class=\\\"modal-header bg-info\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ modevent.name }}</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <form [formGroup]=\\\"eventForm\\\" (ngSubmit)=\\\"onUpdate(modevent.id)\\\">\\n\\n                <!-- Event Location -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Location</label>\\n                    <select class=\\\"form-control\\\" formControlName=\\\"location_id\\\" #l (change)=\\\"getPlacesByLocation(l.value)\\\" [value]=\\\"modevent.location_id\\\" required>\\n                                <option value=\\\"{{location.id}}\\\" *ngFor=\\\"let location of locations\\\">{{location.name}}</option>\\n                            </select>\\n                </div>\\n\\n                <!-- Event Name -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" [value]=\\\"modevent.name\\\" required />\\n                </div>\\n\\n                <!-- Event Desription -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Description</label>\\n                    <angular-editor formControlName=\\\"description\\\" [config]=\\\"editorConfig\\\"></angular-editor>\\n                    <!-- <div [innerHTML]=\\\"modevent.description\\\"></div> -->\\n                    <!-- <textarea formControlName=\\\"description\\\" class=\\\"form-control\\\" [value]=\\\"modevent.description\\\"></textarea> -->\\n                </div>\\n\\n                <!-- Event date -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Event Date</label>\\n                    <div class=\\\"input-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"event_date\\\" placeholder=\\\"mm/dd/yyyy\\\" name=\\\"dp\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\" [value]=\\\"modevent.event_date\\\" required>\\n                        <div class=\\\"input-group-append\\\">\\n                            <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\"><fa-icon [icon]=\\\"faCalendar\\\"></fa-icon></button>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <!-- Start and End time -->\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            <label>Start Time</label>\\n                            <ngb-timepicker formControlName=\\\"start_time\\\" [meridian]=\\\"meridian\\\" required></ngb-timepicker>\\n                        </div>\\n                        <div class=\\\"col\\\">\\n                            <label>End Time</label>\\n                            <ngb-timepicker formControlName=\\\"end_time\\\" [meridian]=\\\"meridian\\\" required></ngb-timepicker>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <!-- Flyer upload -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Upload Event Flyer</label>\\n                    <div class=\\\"input-group\\\">\\n                        <input type=\\\"file\\\" name=\\\"photo\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n                        <div class=\\\"input-group-append\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\" (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n                                        Upload an Image\\n                                    </button>\\n                        </div>\\n                        <div class=\\\"input-group\\\">\\n                            <img *ngIf=\\\"previewflyer\\\" [src]=\\\"previewflyer\\\" width=\\\"200\\\" height=\\\"200\\\" />\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <!-- Cost field -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Cost</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"cost\\\" class=\\\"form-control\\\" [value]=\\\"modevent.cost\\\" required />\\n                </div>\\n\\n                <!-- Event Place -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Place</label>\\n                    <select class=\\\"form-control\\\" formControlName=\\\"place_id\\\" required>\\n                                <option value=\\\"{{place.id}}\\\" *ngFor=\\\"let place of places\\\">{{place.name}}</option>\\n                            </select>\\n                </div>\\n\\n                <!-- Create event button -->\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-outline-primary\\\">Update Event</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n    </div>\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\nimport { EventService } from './event.service';\nimport { LocationService } from '../locations/location.service';\nimport { faTrash, faEdit, faPlusCircle, faCalendar } from '@fortawesome/free-solid-svg-icons';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FileUploader } from 'ng2-file-upload/ng2-file-upload';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { ToastrService } from 'ngx-toastr';\nimport { cfg } from './../config';\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.css']\n})\nexport class EventsComponent implements OnInit {\n  events: any;\n  faTrash = faTrash;\n  faEdit = faEdit;\n  faPlusCircle = faPlusCircle;\n  faCalendar = faCalendar;\n  modevent: any;\n  eventForm: FormGroup;\n  locations: any;\n  places: any;\n  model;\n  time = {hour: 13, minute: 30};\n  meridian = true;\n  URL = 'http://localhost:3100/upload';\n  public uploader: FileUploader = new FileUploader({url: this.URL, itemAlias: 'photo'});\n  photo_uid: any;\n  previewflyer: any;\n  user: any;\n  editorConfig: AngularEditorConfig = {\n    editable: true,\n    spellcheck: true,\n    height: '25rem',\n    minHeight: '5rem',\n    placeholder: 'Enter text here...',\n    translate: 'no',\n    uploadUrl: 'v1/images', // if needed\n    customClasses: [ // optional\n      {\n        name: \"quote\",\n        class: \"quote\",\n      },\n      {\n        name: 'redText',\n        class: 'redText'\n      },\n      {\n        name: \"titleText\",\n        class: \"titleText\",\n        tag: \"h1\",\n      },\n    ]\n  };\n\n  constructor(\n    private event: EventService, \n    private modalService: NgbModal, \n    private formBuilder: FormBuilder, \n    private location: LocationService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.user = JSON.parse(localStorage.getItem('user'));\n    this.getEvents();\n\n    this.location.getLocations().then( data => {\n      this.locations = data['items'];\n    });\n\n    this.eventForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: '',\n      event_date: ['', Validators.required],\n      start_time: ['', Validators.required],\n      end_time: ['', Validators.required],\n      event_flyer: '',\n      place_id: ['', Validators.required],\n      cost: ['', Validators.required],\n      location_id: ['', Validators.required]\n    });\n\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\n    this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n      var results = JSON.parse(response);  \n      if (results.success) {\n        this.photo_uid = results.data.uid;\n        this.previewflyer = results.data.url;\n        console.log(\"%c Photo UID: \" + this.photo_uid, \"color: blue\");      \n      }\n    };\n  }\n\n  toggleMeridian() {\n    this.meridian = !this.meridian;\n  }\n\n  getEvents() {\n    if (this.user.userlevel == 'admin') {\n      this.event.getEvents().then( data => {\n        console.log(data['items'])\n        this.events = data['items'] });\n\n    } else {\n      this.location.getEventsByLocation(this.user.location).then( data => {\n        this.events = data['items']\n      });\n    }\n\n  }\n\n  delete(id) {\n    this.event.deleteEvent(id).then( data => {\n      console.log(data);\n      this.getEvents();\n    });\n  }\n\n  open(content, item) {\n    if (item != null) {\n      this.modevent = item;\n    }\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', size: 'lg'}).result.then((result) => {});\n  }\n\n  onSubmit() {\n    var form = this.eventForm.value;\n    form.event_date = cfg.dateConverter(form.event_date);\n    form.start_time = cfg.timeConverter(form.start_time);\n    form.end_time = cfg.timeConverter(form.end_time);\n    form.event_flyer = this.photo_uid;\n    \n    this.event.addEvent(form).then( data => {\n      if (data['success']) {\n        this.modalService.dismissAll();\n        this.showSuccess(data['message'], \"Create Event\");\n        this.getEvents();\n      } else {\n        this.showFailure(data['message'], \"Create Event\");\n      }\n    });\n  }\n\n  onUpdate(id) {\n    var form = this.eventForm.value;\n    for(var prop in form) {\n      if (form.hasOwnProperty(prop) && !form[prop]) {\n        delete form[prop]\n      }\n    }\n    if ( form.event_date ) form.event_date = cfg.timeConverter(form.event_date);\n    if ( form.start_time ) form.start_time = cfg.timeConverter(form.start_time);\n    if ( form.end_time ) form.end_time = cfg.timeConverter(form.end_time);\n    this.event.updateEvent(form, id).then( data => {\n      if (data['success']) {\n        this.modalService.dismissAll();\n        this.showSuccess(data['message'], \"Update Event\");\n        this.getEvents();\n      } else {\n        this.showFailure(data['message'], \"Update Event\");\n      }\n    });\n  }\n\n  getPlacesByLocation(id) {\n    this.location.getPlacesByLocation(id).then( places => this.places = places['data'])\n  }\n\n  showSuccess(msg, title) {\n    this.toastr.success(msg, title);\n  }\n\n  showFailure(msg, title) {\n    this.toastr.error(msg, title);\n  }\n\n}\n","module.exports = \".login-page {\\n    background-color: #000;\\n    color: white;\\n    height: 100%;\\n    padding-bottom: 100px;\\n}\\n\\n.page-title {\\n    color: #fff;\\n}\\n\\n.content {\\n    color: #fff;\\n}\\n\\n.center-block {\\n    padding-top: 3%;\\n    display: block;\\n    margin-left: auto;\\n    margin-right: auto;\\n}\\n\\n.form-box {\\n    margin-top: 50px;\\n}\\n\\n.code-box {\\n    margin: 10px auto;\\n}\\n\\n.code-box-button {\\n    padding: 8px 9px 5px;\\n    background: #CCD;\\n    border-bottom-right-radius: 5px;\\n    border-top-right-radius: 5px;\\n    border-left: 1px solid #999;\\n}\\n\\n.email-input {\\n    padding: 15px 13px;\\n}\\n\\n.go-btn {\\n    background: none;\\n    border: none;\\n}\\n\\n.signup {\\n    margin: 0 auto;\\n}\\n\\n.loginType {\\n    color: #000;\\n}\"","module.exports = \"<div class=\\\"login-page\\\">\\n    <div class=\\\"row\\\">\\n        <img class=\\\"img-responsive center-block\\\" src=\\\"../assets/imgs/SECRET_SOCIETY_MAIN.jpg\\\">\\n    </div>\\n\\n    <ngb-alert *ngIf=\\\"successMessage\\\" type=\\\"success\\\" (close)=\\\"successMessage = null\\\">{{ successMessage }}</ngb-alert>\\n\\n    <div class=\\\"col-sm-12 form-box\\\">\\n\\n        <div class=\\\"row\\\" *ngIf=\\\"showCode\\\">\\n            <div class=\\\"input-group col-md-offset-3 col-md-6 code-box\\\">\\n                <input #code type=\\\"text\\\" class=\\\"form-control input-lg ng-pristine ng-untouched ng-valid\\\" placeholder=\\\"Enter Your Code\\\" (keyup)=\\\"checkCode(code.value)\\\" aria-invalid=\\\"false\\\">\\n                <div class=\\\"input-group-addon code-box-button\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn\\\" [className]=\\\"foundCode ? 'btn-light go-btn' : 'btn-success  go-btn'\\\" (click)=\\\"goCode()\\\" [disabled]=\\\"!foundCode\\\">\\n                        <fa-icon [icon]=\\\"faArrowCircleRight\\\" size=\\\"2x\\\"></fa-icon>\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\" *ngIf=\\\"showLogin\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"input-group col-md-offset-3 col-md-6 code-box\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control input-lg email-input\\\" formControlName=\\\"email\\\" placeholder=\\\"Email Address\\\">\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"input-group col-md-offset-3 col-md-6 code-box\\\">\\n                    <input type=\\\"password\\\" class=\\\"form-control input-lg\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\n                    <div class=\\\"input-group-addon code-box-button\\\">\\n                        <button class=\\\"btn btn-light go-btn\\\">\\n                        <fa-icon [icon]=\\\"faArrowCircleRight\\\" size=\\\"2x\\\"></fa-icon>\\n                    </button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n\\n    <div class=\\\"col-sm-12 loginType text-center\\\" *ngIf=\\\"!showSignup\\\"><button class=\\\"btn btn-light\\\" (click)=\\\"toggleForm()\\\">{{ loginType }}</button></div>\\n\\n    <div class=\\\"container\\\" *ngIf=\\\"showSignup\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12 page-title\\\">\\n                <h3 class=\\\"text-center\\\">Create an Account</h3>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row content\\\">\\n            <div class=\\\"container text-default\\\">\\n\\n                <div class=\\\"col-sm-8 col-sm-offset-2 signup\\\">\\n\\n                    <form [formGroup]=\\\"signupForm\\\" (ngSubmit)=\\\"register()\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label>Closet Major City</label>\\n                            <select class=\\\"form-control\\\" formControlName=\\\"location_id\\\">\\n                            <option value=\\\"{{location.id}}\\\" *ngFor=\\\"let location of locations\\\">{{location.name}}</option>\\n                        </select>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>First Name</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"first_name\\\" class=\\\"form-control\\\" />\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>Last Name</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"last_name\\\" class=\\\"form-control\\\" />\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>Email</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" />\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>Password</label>\\n                            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" />\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <button class=\\\"btn btn-primary\\\">Register</button>\\n                        </div>\\n                    </form>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, ElementRef, AfterViewInit } from '@angular/core';\nimport { UserService } from '../users/user.service';\nimport { LocationService } from '../locations/location.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from \"@angular/router\";\nimport { faArrowCircleRight } from '@fortawesome/free-solid-svg-icons';\nimport {Subject} from 'rxjs';\nimport {debounceTime} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n  faArrowCircleRight = faArrowCircleRight;\n  foundCode: any;\n  showCode = true;\n  showLogin = false;\n  showSignup = false;\n  loginType = \"Member Login\";\n  locations: any;\n  signupForm: FormGroup;\n  loginForm: FormGroup;\n  private _success = new Subject<string>();\n\n  successMessage: string;\n \n  constructor(\n    private user: UserService, \n    private location: LocationService, \n    private formBuilder: FormBuilder, \n    private router: Router,\n    private elementRef: ElementRef\n  ) { }\n\n  ngOnInit() {\n    if ( localStorage.getItem('authenticated') ) this.router.navigate(['/dashboard']);\n    \n    this.signupForm = this.formBuilder.group({\n      code: '',\n      first_name: ['', Validators.required],\n      last_name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      userlevel: '',\n      location_id: ['', Validators.required],\n      ambassador_id: ''\n    });\n\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required])],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(6)])],\n    });\n\n    this.location.getLocations().then( data => {\n      this.locations = data['items'];\n    });\n\n    this._success.subscribe((message) => this.successMessage = message);\n    this._success.pipe(\n      debounceTime(5000)\n    ).subscribe(() => this.successMessage = null);\n  }\n\n  ngAfterViewInit() {\n    this.elementRef.nativeElement.ownerDocument.body.style.backgroundColor = 'white';\n  }\n\n  public changeSuccessMessage() {\n    this._success.next(`${new Date()} - Message successfully changed.`);\n  }\n  \n  toggleForm() {\n    if ( this.showCode ) {\n      this.showCode = false;\n      this.showLogin = true;\n      this.loginType = \"Enter Code\";\n    } else {\n      this.showCode = true;\n      this.showLogin = false;\n      this.loginType = \"Member Login\";\n    }\n  }\n\n  checkCode(code) {\n    if (code) {\n      this.user.checkCode(code).then( (data) => {\n        if ( data['success'] ) {\n          this.foundCode = data['data'];\n        } else {\n          this.foundCode = \"\";\n        }\n      });\n    }\n  }\n\n  goCode() {\n    this.showCode = false;\n    this.showSignup = true;\n  }\n\n  register() {\n    var form = this.signupForm.value;\n    form.code = this.foundCode.code;\n    form.ambassador_id = this.foundCode.id;\n    form.userlevel = \"user\";\n    this.user.register(form).then( data => {\n      if (data['success']) {\n        this.router.navigate(['/dashboard']);\n      } else {\n        this.successMessage = data['message'];\n      }\n    }).catch( e => {\n      this.successMessage = e.error['message'];\n    });\n  }\n\n  /**\n   * Login the user into app\n   */\n  login() {\n    //use this.loginData.value to authenticate the user\n    this.user.login(this.loginForm.value)\n      .then( data => {\n        if (data['success']) {\n          this.router.navigate(['/dashboard']);\n        } else {\n          this.successMessage = data['message'];\n        }\n      })\n      .catch( e => {\n        this.successMessage = e.error['message'];\n      });\n  }\n\n}\n","module.exports = \".container {\\n    color: #c5c2c2;\\n    margin: 50px;\\n}\\n\\n.about li {\\n    list-style: none;\\n    padding: 10px 0px;\\n    line-height: 2em;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-lg-center\\\">\\n        <div>\\n            <h3>How It Works</h3>\\n        </div>\\n    </div>\\n    <div class=\\\"row justify-content-md-center col\\\">\\n        <ul class=\\\"about\\\">\\n            <li>\\n                <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> - You have been presented with a membership card because one of our representatives felt you were the kind of socialite we would like to welcome into our network.</li>\\n            <li>\\n                <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> - Your temporary membership card is activated by visiting our site, clicking \\\"register\\\" and entering the access code on your card.</li>\\n            <li>\\n                <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> - You will be taken to another screen which will ask for some additional information about you. After this, you will gain access to our private event listings.</li>\\n            <li>\\n                <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> - Select the upcoming event you would like to attend and either pay for a single guest ticket or join the Secret Society as a member. Even if you select not to purchase a membership, your temporary membership enables you to\\n                still attend events at a guest's premium. We strive to provide a rich, fulfilling experience for our members and strongly encourage you to consider making the investment to become a Secret Society member.</li>\\n            <li>\\n                <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> - Bring your NSS card and a valid state-issued driver's license, I.D. or passport to the event with you.</li>\\n            <li>\\n                <fa-icon [icon]=\\\"faGraduationCap\\\" size=\\\"lg\\\"></fa-icon> - Bring your cellular device with you for ticket processing and membership verification.</li>\\n        </ul>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { faGraduationCap } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-how',\n  templateUrl: './how.component.html',\n  styleUrls: ['./how.component.css']\n})\nexport class HowComponent implements OnInit {\n  faGraduationCap = faGraduationCap;\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n  apiUrl = \"https://solutetech.io\";\n\n  constructor(private http: HttpClient) { }\n\n  getLocations() {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/locations`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  getLocation(id) {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/locations/${id}`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  addLocation(form) {\n    return new Promise( ( resolve ) => {\n      this.http.post(`${this.apiUrl}/locations`, form)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  updateLocation(form, id) {\n    return new Promise( ( resolve ) => {\n      this.http.patch(`${this.apiUrl}/locations/${id}`, form)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  deleteLocation(id) {\n    return new Promise( ( resolve ) => {\n      this.http.delete(`${this.apiUrl}/locations/${id}`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  getPlacesByLocation(id) {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/locations/${id}/places`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  getEventsByLocation(id) {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/locations/${id}/events`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n}\n","module.exports = \".container-fluid {\\n    margin-top: 50px;\\n    color: #000;\\n    padding: 0px 40px;\\n}\\n\\n.add-row {\\n    padding-bottom: 10px;\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <h3>Locations</h3>\\n    </div>\\n    <div class=\\\"row add-row\\\">\\n        <div class=\\\"col\\\"></div>\\n        <div class=\\\"col text-right\\\">\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"open(contentNew, null)\\\"><fa-icon [icon]=\\\"faPlusCircle\\\"></fa-icon> Add New Location</button>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <table class=\\\"table table-light table-striped table-hover\\\">\\n            <thead>\\n                <tr>\\n                    <th scope=\\\"col\\\">ID</th>\\n                    <th scope=\\\"col\\\">NAME</th>\\n                    <!-- <th scope=\\\"col\\\">LOGO</th> -->\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let loc of locations\\\">\\n                    <th scope=\\\"row\\\">{{ loc.id }}</th>\\n                    <td>{{ loc.name }}</td>\\n                    <!-- <td><img class=\\\"img-thumbnail\\\" [src]=\\\"loc.logo\\\" /></td> -->\\n                    <td>\\n                        <button class=\\\"btn btn-info\\\" (click)=\\\"open(contentEdit, loc)\\\">\\n                            <fa-icon [icon]=\\\"faEdit\\\"></fa-icon>\\n                        </button>&nbsp;\\n                        <button class=\\\"btn btn-danger\\\" (click)=\\\"open(contentDelete, loc)\\\">\\n                            <fa-icon [icon]=\\\"faTrash\\\"></fa-icon>\\n                        </button>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\\n<ng-template #contentNew let-modal>\\n    <div class=\\\"modal-header bg-success\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Create an Event</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\n                                <span aria-hidden=\\\"true\\\">&times;</span>\\n                            </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <form [formGroup]=\\\"locationForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                <!-- Event Name -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <!-- Create event button -->\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-outline-primary\\\" *ngIf=\\\"locationForm.valid\\\">Create Location</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Cancel</button>\\n    </div>\\n</ng-template>\\n\\n<ng-template #contentDelete let-modal>\\n    <div class=\\\"modal-header bg-danger\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Delete Confirmation</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            Are you sure you want to delete <strong>{{ modloc.name }}</strong>?\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"delete(modloc.id); modal.close()\\\">Yes</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">No</button>\\n    </div>\\n</ng-template>\\n\\n<!-- <ng-template #contentView let-modal>\\n                <div class=\\\"modal-header bg-primary\\\">\\n                    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ moduser.first_name }} {{ moduser.last_name }}</h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                                  </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"container\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col\\\">\\n                                Address<br/> {{ moduser.address }}<br/> {{ moduser.city }}, {{ moduser.state }} {{ moduser.zip}}<br/> {{ moduser.phone }} <br/> {{ moduser.email }}\\n                            </div>\\n                            <div class=\\\"col\\\">\\n                                City: {{ moduser.location }}<br/> Ambassador: {{ moduser.ambassador }}\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n                </div>\\n            </ng-template> -->\\n\\n<ng-template #contentEdit let-modal>\\n    <div class=\\\"modal-header bg-info\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ modloc.name }}</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <form [formGroup]=\\\"locationForm\\\" (ngSubmit)=\\\"onUpdate(modloc.id)\\\">\\n\\n                <!-- Event Name -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"name\\\" [value]=\\\"modloc.name\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <!-- Create event button -->\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-outline-primary\\\">Update Location</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n    </div>\\n</ng-template>\"","import { LocationService } from './location.service';\nimport { Component, OnInit } from '@angular/core';\nimport { faTrash, faEdit, faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {  FileUploader } from 'ng2-file-upload/ng2-file-upload';\n\n@Component({\n  selector: 'app-locations',\n  templateUrl: './locations.component.html',\n  styleUrls: ['./locations.component.css']\n})\nexport class LocationsComponent implements OnInit {\n  locations: any;\n  faTrash = faTrash;\n  faEdit = faEdit;\n  faPlusCircle =faPlusCircle;\n  modloc: any;\n  locationForm: FormGroup;\n  URL = 'http://localhost:3100/upload';\n  public uploader: FileUploader = new FileUploader({url: this.URL, itemAlias: 'photo'});\n\n  constructor(private location: LocationService, private modalService: NgbModal, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.getLocations();\n\n    this.locationForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      logo: ''\n    })\n  }\n\n  getLocations() {\n    this.location.getLocations().then( data => this.locations = data['items'] );\n  }\n\n  delete(id) {\n    this.location.deleteLocation(id).then( data => {\n      console.log(data);\n      this.getLocations();\n    });\n  }\n\n  open(content, item) {\n    if (item != null) {\n      this.modloc = item;\n    }\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', size: 'lg'}).result.then((result) => {});\n  }\n\n  onSubmit() {\n    var form = this.locationForm.value;\n    console.log(form);\n    this.location.addLocation(form).then( data => {\n      if (data['success']) {\n        this.modalService.dismissAll();\n        this.getLocations();\n      } else {\n        console.log(\"no\", data);\n      }\n    });\n  }\n\n  onUpdate(id) {\n    var form = this.locationForm.value;\n    for(var prop in form) {\n      if (form.hasOwnProperty(prop) && !form[prop]) {\n        delete form[prop]\n      }\n    }\n    this.location.updateLocation(form, id).then( data => {\n      if (data['success']) {\n        this.modalService.dismissAll();\n        this.getLocations();\n      } else {\n        console.log(\"no\", data);\n      }\n    });\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MemberService {\n  apiUrl = \"https://solutetech.io\";\n\n  constructor(private http: HttpClient) { }\n\n  getMembers() {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/members`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  getMember(id) {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/members/${id}`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  addMember(form) {\n    return new Promise( ( resolve ) => {\n      this.http.post(`${this.apiUrl}/members`, form)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  updateMember(form) {\n    return new Promise( ( resolve ) => {\n      this.http.patch(`${this.apiUrl}/members`, form)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  deleteMember(id) {\n    return new Promise( ( resolve ) => {\n      this.http.delete(`${this.apiUrl}/members/${id}`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n}\n","module.exports = \".container-fluid {\\n    margin-top: 50px;\\n    color: #000;\\n    padding: 0px 40px;\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <h3>Members</h3>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\"></div>\\n        <div class=\\\"col\\\"></div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <table class=\\\"table table-light table-striped table-hover\\\">\\n            <thead>\\n                <tr>\\n                    <th scope=\\\"col\\\">CODE</th>\\n                    <th scope=\\\"col\\\">USER</th>\\n                    <th scope=\\\"col\\\">NAME</th>\\n                    <th scope=\\\"col\\\">STATUS</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let mem of members\\\">\\n                    <td>{{ mem.code }}</td>\\n                    <td>{{ mem.user }}</td>\\n                    <td>{{ mem.name }}</td>\\n                    <td>{{ mem.status }}</td>\\n                    <!-- <td>\\n                        <button class=\\\"btn btn-info\\\" (click)=\\\"open(contentEdit, mem)\\\">\\n                            <fa-icon [icon]=\\\"faEdit\\\"></fa-icon>\\n                        </button>&nbsp;\\n                        <button class=\\\"btn btn-danger\\\" (click)=\\\"open(contentDelete, mem)\\\">\\n                            <fa-icon [icon]=\\\"faTrash\\\"></fa-icon>\\n                        </button>\\n                    </td> -->\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\\n<!-- <ng-template #contentDelete let-modal>\\n    <div class=\\\"modal-header bg-danger\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Delete Confirmation</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            Are you sure you want to delete <strong>{{ modmem.user }}</strong>'s membership?\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"delete(modmem.id); modal.close()\\\">Yes</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">No</button>\\n    </div>\\n</ng-template> -->\\n\\n<!-- <ng-template #contentView let-modal>\\n        <div class=\\\"modal-header bg-primary\\\">\\n            <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ moduser.first_name }} {{ moduser.last_name }}</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\n                          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <div class=\\\"container\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        Address<br/> {{ moduser.address }}<br/> {{ moduser.city }}, {{ moduser.state }} {{ moduser.zip}}<br/> {{ moduser.phone }} <br/> {{ moduser.email }}\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                        City: {{ moduser.location }}<br/> Ambassador: {{ moduser.ambassador }}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n        </div>\\n    </ng-template>\\n    \\n    <ng-template #contentEdit let-modal>\\n        <div class=\\\"modal-header bg-info\\\">\\n            <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ moduser.first_name }} {{ moduser.last_name }}</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                                <span aria-hidden=\\\"true\\\">&times;</span>\\n                              </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <div class=\\\"container\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        Address<br/> {{ moduser.address }}<br/> {{ moduser.city }}, {{ moduser.state }} {{ moduser.zip}}<br/> {{ moduser.phone }} <br/> {{ moduser.email }}\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                        City: {{ moduser.location }}<br/> Ambassador: {{ moduser.ambassador }}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n        </div>\\n    </ng-template> -->\"","import { Component, OnInit } from '@angular/core';\nimport { MemberService } from './member.service';\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-members',\n  templateUrl: './members.component.html',\n  styleUrls: ['./members.component.css']\n})\nexport class MembersComponent implements OnInit {\n  members: any;\n  faTrash = faTrash;\n  faEdit = faEdit;\n  modmem: any;\n\n  constructor(private member: MemberService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.getMembers();\n  }\n\n  getMembers() {\n    this.member.getMembers().then( data => this.members = data['items'] );\n  }\n\n  delete(id) {\n    this.member.deleteMember(id).then( data => {\n      console.log(data);\n      this.getMembers();\n    });\n  }\n\n  open(content, item) {\n    this.modmem = item;\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', size: 'lg'}).result.then((result) => {});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MembershipService {\n  apiUrl = \"https://solutetech.io\";\n\n  constructor(private http: HttpClient) { }\n\n  getMemberships() {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/memberships`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => resolve(err.error));\n    });\n  }\n\n  getMembership(id) {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/memberships/${id}`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  addMembership(form) {\n    return new Promise( ( resolve ) => {\n      this.http.post(`${this.apiUrl}/stripe/products`, { \n        name: form.name, \n        type: 'service', \n        statement_descriptor: `TSS - ${form.name}`,\n        metadata: { \n          cost: form.cost,\n          frequency: form.frequency\n        }\n      }).subscribe( data => {\n          var prod = data['data'];\n          this.http.post(`${this.apiUrl}/stripe/plans`, {\n            product: prod.id,\n            nickname: prod.name,\n            currency: 'usd',\n            interval: prod.metadata.frequency,\n            amount: prod.metadata.cost,\n          }).subscribe( data => {\n            var plan = data['data'];\n            form.product_id = plan.product;\n            form.plan_id = plan.id;\n            this.http.post(`${this.apiUrl}/memberships`, form)\n              .subscribe( data => {\n                  resolve(data);\n              }, err => resolve(err.error));\n          }, err => resolve(err.error));\n      }, err => resolve(err.error));\n    });\n  }\n\n  updateMembership(form, id) {\n    return new Promise( ( resolve ) => {\n      this.http.patch(`${this.apiUrl}/memberships/${id}`, form)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  deleteMembership(id, product, plan) {\n    return new Promise( ( resolve ) => {\n      this.http.delete(`${this.apiUrl}/stripe/plans/${plan}`).subscribe( data => {\n        console.log(\"Delete Plan: \", data['data']);\n        this.http.delete(`${this.apiUrl}/stripe/products/${product}`).subscribe( data => {\n          console.log(\"Delete Product: \", data['data']);\n          this.http.delete(`${this.apiUrl}/memberships/${id}`)\n            .subscribe( data => {\n              resolve(data);\n          }, err => resolve(err.error));\n        }, err => resolve(err.error));\n      }, err => resolve(err.error));\n    });\n  }\n}\n","module.exports = \".container-fluid {\\n    margin-top: 50px;\\n    color: #000;\\n    padding: 0px 40px;\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <h3>Memberships</h3>\\n    </div>\\n    <div class=\\\"row add-row\\\">\\n        <div class=\\\"col\\\"></div>\\n        <div class=\\\"col text-right\\\">\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"open(contentNew, null)\\\"><fa-icon [icon]=\\\"faPlusCircle\\\"></fa-icon> Add New Membership</button>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <table class=\\\"table table-light table-hover table-striped\\\">\\n            <thead>\\n                <tr>\\n                    <th scope=\\\"col\\\">ID</th>\\n                    <th scope=\\\"col\\\">NAME</th>\\n                    <th scope=\\\"col\\\">DESCRIPTION</th>\\n                    <th scope=\\\"col\\\">COST</th>\\n                    <th scope=\\\"col\\\">FREQUENCY</th>\\n                    <th scope=\\\"col\\\">COST PER</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let mem of memberships\\\">\\n                    <th scope=\\\"row\\\">{{ mem.id }}</th>\\n                    <td>{{ mem.name }}</td>\\n                    <td [innerHTML]=\\\"mem.description\\\"></td>\\n                    <td>{{ mem.cost | currency }}</td>\\n                    <td>{{ mem.frequency }}</td>\\n                    <td>{{ mem.cost_per_event | percent }}</td>\\n                    <td>\\n                        <button class=\\\"btn btn-info\\\" (click)=\\\"open(contentEdit, mem)\\\">\\n                            <fa-icon [icon]=\\\"faEdit\\\"></fa-icon>\\n                        </button>&nbsp;\\n                        <button class=\\\"btn btn-danger\\\" (click)=\\\"open(contentDelete, mem)\\\">\\n                            <fa-icon [icon]=\\\"faTrash\\\"></fa-icon>\\n                        </button>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\\n<ng-template #contentDelete let-modal>\\n    <div class=\\\"modal-header bg-danger\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Delete Confirmation</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            Are you sure you want to delete <strong>{{ modmem.name }}</strong>?\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"delete(modmem.id, modmem.product_id, modmem.plan_id); modal.close()\\\">Yes</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">No</button>\\n    </div>\\n</ng-template>\\n\\n<!-- Edit Membership -->\\n<ng-template #contentEdit let-modal>\\n    <div class=\\\"modal-header bg-info\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ modmem.name }}</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <form [formGroup]=\\\"membershipForm\\\" (ngSubmit)=\\\"onUpdate(modmem.id)\\\">\\n\\n                <!-- First Name -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"name\\\" [value]=\\\"modmem.name\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <!-- Event Desription -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Description</label>\\n                    <!-- <textarea formControlName=\\\"description\\\" class=\\\"form-control\\\" [value]=\\\"modmem.description\\\"></textarea> -->\\n                    <angular-editor formControlName=\\\"description\\\" [config]=\\\"editorConfig\\\" (ngValue)=\\\"modmem.description\\\"></angular-editor>\\n                </div>\\n\\n                <!-- Cost field -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Cost</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"cost\\\" [value]=\\\"modmem.cost\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <!-- Frequency -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Frequency</label>\\n                    <select class=\\\"form-control\\\" formControlName=\\\"frequency\\\" [value]=\\\"modmem.frequency\\\" required>\\n                        <option value=\\\"{{freq.id}}\\\" *ngFor=\\\"let freq of frequencies\\\">{{freq.name}}</option>\\n                    </select>\\n                </div>\\n\\n                <!-- Cost Per field -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Cost Per Event</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"cost_per_event\\\" [value]=\\\"modmem.cost_per_event\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <!-- Create event button -->\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-outline-primary\\\">Update Membership</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n    </div>\\n</ng-template>\\n\\n<!-- Create New Modal -->\\n<ng-template #contentNew let-modal>\\n    <div class=\\\"modal-header bg-success\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Create Membership</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <form [formGroup]=\\\"membershipForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                <!-- First Name -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <!-- Event Desription -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Description</label>\\n                    <angular-editor formControlName=\\\"description\\\" [config]=\\\"editorConfig\\\"></angular-editor>\\n                </div>\\n\\n                <!-- Cost field -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Cost</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"cost\\\" class=\\\"form-control\\\" placeholder=\\\"100.00\\\" required />\\n                </div>\\n\\n                <!-- Frequency -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Frequency</label>\\n                    <select class=\\\"form-control\\\" formControlName=\\\"frequency\\\" required>\\n                            <option value=\\\"{{freq.id}}\\\" *ngFor=\\\"let freq of frequencies\\\">{{freq.name}}</option>\\n                        </select>\\n                </div>\\n\\n                <!-- Cost Per field -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Cost Per Event</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"cost_per_event\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <!-- Create event button -->\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-outline-primary\\\" *ngIf=\\\"membershipForm.valid\\\">Create Membership</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Cancel</button>\\n    </div>\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\nimport { MembershipService } from './membership.service';\nimport { faTrash, faEdit, faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-memberships',\n  templateUrl: './memberships.component.html',\n  styleUrls: ['./memberships.component.css']\n})\nexport class MembershipsComponent implements OnInit {\n  memberships: any;\n  faTrash = faTrash;\n  faEdit = faEdit;\n  modmem: any;\n  faPlusCircle = faPlusCircle;\n  membershipForm: FormGroup;\n  frequencies = [\n    { id: 'month',  name: 'monthly' },\n    { id: 'year', name: 'annually' }\n  ];\n\n  editorConfig: AngularEditorConfig = {\n    editable: true,\n    spellcheck: true,\n    height: '25rem',\n    minHeight: '5rem',\n    placeholder: 'Enter text here...',\n    translate: 'no',\n    uploadUrl: 'v1/images', // if needed\n    customClasses: [ // optional\n      {\n        name: \"quote\",\n        class: \"quote\",\n      },\n      {\n        name: 'redText',\n        class: 'redText'\n      },\n      {\n        name: \"titleText\",\n        class: \"titleText\",\n        tag: \"h1\",\n      },\n    ]\n  };\n\n  constructor(\n    private membership: MembershipService, \n    private modalService: NgbModal, \n    private formBuilder: FormBuilder,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.getMemberships();\n\n    this.membershipForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      cost: ['', Validators.required],\n      frequency: ['', Validators.required],\n      cost_per_event: ['', Validators.required],\n    });\n  }\n\n  getMemberships() {\n    this.membership.getMemberships().then( data => this.memberships = data['items'] );\n    console.log(this.memberships);\n  }\n\n  delete(id, product, plan) {\n    this.membership.deleteMembership(id, product, plan).then( data => {\n      if (data['success']) {\n        this.showSuccess(data['message'], \"Delete Membership\");\n        this.getMemberships();\n      } else {\n        this.showFailure(data['message'], \"Delete Membership\");\n      }\n    });\n  }\n\n  open(content, item) {\n    if ( item != null) {\n      this.modmem = item;\n    }\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', size: 'lg'}).result.then((result) => {});\n  }\n\n  onSubmit() {\n    var form = this.membershipForm.value;\n    console.log(form);\n    this.membership.addMembership(form).then( data => {\n      if (data['success']) {\n        this.modalService.dismissAll();\n        this.getMemberships();\n      } else {\n        console.log(\"Create Membership\", data);\n      }\n    });\n  }\n\n  onUpdate(id) {\n    var form = this.membershipForm.value;\n    for(var prop in form) {\n      if (form.hasOwnProperty(prop) && !form[prop]) {\n        delete form[prop]\n      }\n    }\n    this.membership.updateMembership(form, id).then( data => {\n      if (data['success']) {\n        this.modalService.dismissAll();\n        this.getMemberships();\n      } else {\n        console.log(\"no\", data);\n      }\n    });\n  }\n\n  showSuccess(msg, title) {\n    this.toastr.success(msg, title);\n  }\n\n  showFailure(msg, title) {\n    this.toastr.error(msg, title);\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaceService {\n  apiUrl = \"https://solutetech.io\";\n\n  constructor(private http: HttpClient) { }\n\n  getPlaces() {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/places`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  getPlace(id) {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/places/${id}`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  addPlace(form) {\n    return new Promise( ( resolve ) => {\n      this.http.post(`${this.apiUrl}/places`, form)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  updatePlace(form, id) {\n    return new Promise( ( resolve ) => {\n      this.http.patch(`${this.apiUrl}/places/${id}`, form)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  deletePlace(id) {\n    return new Promise( ( resolve ) => {\n      this.http.delete(`${this.apiUrl}/places/${id}`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n}\n","module.exports = \".container-fluid {\\n    margin-top: 50px;\\n    color: #000;\\n    padding: 0px 40px;\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <h3>Places</h3>\\n    </div>\\n    <div class=\\\"row add-row\\\">\\n        <div class=\\\"col\\\"></div>\\n        <div class=\\\"col text-right\\\">\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"open(contentNew, null)\\\"><fa-icon [icon]=\\\"faPlusCircle\\\"></fa-icon> Add New Place</button>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <table class=\\\"table table-light table-striped table-hover\\\">\\n            <thead>\\n                <tr>\\n                    <th scope=\\\"col\\\">ID</th>\\n                    <th scope=\\\"col\\\">LOCATION</th>\\n                    <th scope=\\\"col\\\">NAME</th>\\n                    <th scope=\\\"col\\\">ADDRESS</th>\\n                    <th scope=\\\"col\\\">PHONE</th>\\n                    <th scope=\\\"col\\\">WEBSITE</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let place of places\\\">\\n                    <th scope=\\\"row\\\">{{ place.id }}</th>\\n                    <td>{{ place.location }}</td>\\n                    <td>{{ place.name }}</td>\\n                    <td>\\n                        {{ place.address }}<br/> {{ place.city }}, {{ place.state }} {{ place.zip }}\\n                    </td>\\n                    <td>{{ place.phone }}</td>\\n                    <td>{{ place.website }}</td>\\n                    <td>\\n                        <button class=\\\"btn btn-info\\\" (click)=\\\"open(contentEdit, place)\\\">\\n                            <fa-icon [icon]=\\\"faEdit\\\"></fa-icon>\\n                        </button>&nbsp;\\n                        <button class=\\\"btn btn-danger\\\" (click)=\\\"open(contentDelete, place)\\\">\\n                            <fa-icon [icon]=\\\"faTrash\\\"></fa-icon>\\n                        </button>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\\n<ng-template #contentDelete let-modal>\\n    <div class=\\\"modal-header bg-danger\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Delete Confirmation</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            Are you sure you want to delete <strong>{{ modplace.name }}</strong>?\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"delete(modplace.id); modal.close()\\\">Yes</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">No</button>\\n    </div>\\n</ng-template>\\n\\n<!-- <ng-template #contentView let-modal>\\n        <div class=\\\"modal-header bg-primary\\\">\\n            <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ moduser.first_name }} {{ moduser.last_name }}</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\n                          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <div class=\\\"container\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        Address<br/> {{ moduser.address }}<br/> {{ moduser.city }}, {{ moduser.state }} {{ moduser.zip}}<br/> {{ moduser.phone }} <br/> {{ moduser.email }}\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                        City: {{ moduser.location }}<br/> Ambassador: {{ moduser.ambassador }}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n        </div>\\n    </ng-template> -->\\n\\n<ng-template #contentEdit let-modal>\\n    <div class=\\\"modal-header bg-info\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ modplace.name }}</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                                <span aria-hidden=\\\"true\\\">&times;</span>\\n                              </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <form [formGroup]=\\\"placeForm\\\" (ngSubmit)=\\\"onUpdate(modplace.id)\\\">\\n\\n                <!-- Place Location -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Location</label>\\n                    <select class=\\\"form-control\\\" formControlName=\\\"location_id\\\" [value]=\\\"modplace.location_id\\\" required>\\n                        <option value=\\\"{{location.id}}\\\" *ngFor=\\\"let location of locations\\\">{{location.name}}</option>\\n                    </select>\\n                </div>\\n\\n                <!-- Name -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"name\\\" [value]=\\\"modplace.name\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <!-- Address field -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Address</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"address\\\" [value]=\\\"modplace.address\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <!-- City field -->\\n                <div class=\\\"form-group\\\">\\n                    <label>City</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"city\\\" [value]=\\\"modplace.city\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label>State</label>\\n                    <select class=\\\"form-control\\\" formControlName=\\\"state\\\" [value]=\\\"modplace.state\\\" required>\\n                        <option value=\\\"{{state.id}}\\\" *ngFor=\\\"let state of states\\\">{{state.name}}</option>\\n                    </select>\\n                </div>\\n\\n                <!-- Cost Per field -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Zip</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"zip\\\" [value]=\\\"modplace.zip\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label>Phone</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"phone\\\" [value]=\\\"modplace.phone\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label>Website</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"website\\\" [value]=\\\"modplace.website\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <!-- Create event button -->\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-outline-primary\\\">Update Place</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n    </div>\\n</ng-template>\\n\\n<!-- Create New Modal -->\\n<ng-template #contentNew let-modal>\\n    <div class=\\\"modal-header bg-success\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Create a Place</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.close()\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <form [formGroup]=\\\"placeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                <!-- Event Location -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Location</label>\\n                    <select class=\\\"form-control\\\" formControlName=\\\"location_id\\\" required>\\n                            <option value=\\\"{{location.id}}\\\" *ngFor=\\\"let location of locations\\\">{{location.name}}</option>\\n                        </select>\\n                </div>\\n\\n                <!-- First Name -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Name</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label>Address</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"address\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <!-- Cost field -->\\n                <div class=\\\"form-group\\\">\\n                    <label>City</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"city\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label>State</label>\\n                    <select class=\\\"form-control\\\" formControlName=\\\"state\\\" required>\\n                            <option value=\\\"{{state.id}}\\\" *ngFor=\\\"let state of states\\\">{{state.name}}</option>\\n                        </select>\\n                </div>\\n\\n                <!-- Cost Per field -->\\n                <div class=\\\"form-group\\\">\\n                    <label>Zip</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"zip\\\" class=\\\"form-control\\\" required />\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label>Phone</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"phone\\\" class=\\\"form-control\\\" />\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label>Website</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"website\\\" class=\\\"form-control\\\" />\\n                </div>\\n\\n                <!-- Create event button -->\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-outline-primary\\\" *ngIf=\\\"placeForm.valid\\\">Create a Place</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Cancel</button>\\n    </div>\\n</ng-template>\"","import { cfg } from './../config';\nimport { Component, OnInit } from '@angular/core';\nimport { PlaceService } from './place.service';\nimport { LocationService } from '../locations/location.service';\nimport { faTrash, faEdit, faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-places',\n  templateUrl: './places.component.html',\n  styleUrls: ['./places.component.css']\n})\nexport class PlacesComponent implements OnInit {\n  places: any;\n  locations: any;\n  states: any;\n  faTrash = faTrash;\n  faEdit = faEdit;\n  faPlusCircle = faPlusCircle;\n  modplace: any;\n  placeForm: FormGroup;\n\n  constructor(private place: PlaceService, \n    private modalService: NgbModal, \n    private location: LocationService,\n    private formBuilder: FormBuilder\n  ) {\n  }\n\n  ngOnInit() {\n    this.getPlaces();\n\n    this.location.getLocations().then( data => {\n      this.locations = data['items'];\n    });\n\n    this.states = cfg.states;\n\n    this.placeForm = this.formBuilder.group({\n      location_id: ['', Validators.required],\n      name: ['', Validators.required],\n      address: ['', Validators.required],\n      city: ['', Validators.required],\n      state: ['', Validators.required],\n      zip: ['', Validators.required],\n      phone: '',\n      website: ''\n    });\n  }\n\n  getPlaces() {\n    this.place.getPlaces().then( data => this.places = data['items'] );\n  }\n\n  delete(id) {\n    this.place.deletePlace(id).then( data => {\n      console.log(data);\n      this.getPlaces();\n    });\n  }\n\n  open(content, item) {\n    if (item != null) {\n      this.modplace = item;\n    }\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', size: 'lg'}).result.then((result) => {});\n  }\n\n  onSubmit() {\n    var form = this.placeForm.value;\n    console.log(form);\n    this.place.addPlace(form).then( data => {\n      if (data['success']) {\n        this.modalService.dismissAll();\n        this.getPlaces();\n      } else {\n        console.log(\"no\", data);\n      }\n    });\n  }\n\n  onUpdate(id) {\n    var form = this.placeForm.value;\n    for(var prop in form) {\n      if (form.hasOwnProperty(prop) && !form[prop]) {\n        delete form[prop]\n      }\n    }\n    this.place.updatePlace(form, id).then( data => {\n      if (data['success']) {\n        this.modalService.dismissAll();\n        this.getPlaces();\n      } else {\n        console.log(\"no\", data);\n      }\n    });\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SurveyService {\n  apiUrl = \"https://solutetech.io\";\n\n  constructor(private http: HttpClient) { }\n\n  getSurveys() {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/surveys`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  getSurvey(id) {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/surveys/${id}`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  addSurvey(form) {\n    return new Promise( ( resolve ) => {\n      this.http.post(`${this.apiUrl}/surveys`, form)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  updateSurvey(form, id) {\n    return new Promise( ( resolve ) => {\n      this.http.patch(`${this.apiUrl}/surveys/${id}`, form)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n\n  deleteSurvey(id) {\n    return new Promise( ( resolve ) => {\n      this.http.delete(`${this.apiUrl}/surveys/${id}`)\n        .subscribe( data => {\n          resolve(data);\n      }, err => console.log(err));\n    });\n  }\n}\n","module.exports = \".container-fluid {\\n    margin-top: 50px;\\n    color: #000;\\n    padding: 0px 40px;\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <h3>Surveys</h3>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\"></div>\\n        <div class=\\\"col\\\"></div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <table class=\\\"table table-light table-striped table-hover\\\">\\n            <thead>\\n                <tr>\\n                    <th scope=\\\"col\\\">USER</th>\\n                    <th scope=\\\"col\\\">ETHNICITY</th>\\n                    <th scope=\\\"col\\\">GENDER</th>\\n                    <th scope=\\\"col\\\">INCOME</th>\\n                    <th scope=\\\"col\\\">EMPLOYMENT</th>\\n                    <th scope=\\\"col\\\">SPORTS</th>\\n                    <th scope=\\\"col\\\">TRAVEL</th>\\n                    <th scope=\\\"col\\\">FASHION</th>\\n                    <th scope=\\\"col\\\">TECHNOLOGY</th>\\n                    <th scope=\\\"col\\\">ARTS</th>\\n                    <th scope=\\\"col\\\">FITNESS</th>\\n                    <th scope=\\\"col\\\">FOOD</th>\\n                    <th scope=\\\"col\\\">INTEREST</th>\\n                    <th></th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let survey of surveys\\\">\\n                    <td>{{ survey.user }}</td>\\n                    <td>{{ survey.ethnicity }}</td>\\n                    <td>{{ survey.gender }}</td>\\n                    <td>{{ survey.income }}</td>\\n                    <td>{{ survey.employment }}</td>\\n                    <td>{{ survey.sports }}</td>\\n                    <td>{{ survey.travel }}</td>\\n                    <td>{{ survey.fashion }}</td>\\n                    <td>{{ survey.technology }}</td>\\n                    <td>{{ survey.arts }}</td>\\n                    <td>{{ survey.fitness }}</td>\\n                    <td>{{ survey.food }}</td>\\n                    <td>{{ survey.interest }}</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { SurveyService } from './survey.service';\n\n@Component({\n  selector: 'app-surveys',\n  templateUrl: './surveys.component.html',\n  styleUrls: ['./surveys.component.css']\n})\nexport class SurveysComponent implements OnInit {\n  surveys: any;\n  modsurvey: any;\n  faTrash = faTrash;\n  faEdit = faEdit;\n\n  constructor(private survey: SurveyService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.getSurveys();\n  }\n\n  getSurveys() {\n    this.survey.getSurveys().then( data => this.surveys = data['items'] );\n  }\n\n  delete(id) {\n    this.survey.deleteSurvey(id).then( data => {\n      console.log(data);\n      this.getSurveys();\n    });\n  }\n\n  open(content, user) {\n    this.modsurvey = user;\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', size: 'lg'}).result.then((result) => {});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  apiUrl = \"https://solutetech.io\";\n\n  constructor(private http: HttpClient) { }\n\n  // Verify ambassador code\n  checkCode(id) {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/code/${id}`)\n        .subscribe( data => {\n          resolve(data);\n        }, err => resolve(err.error));\n    });\n  }\n\n  // Log a user in\n  login(credentials) {\n    return new Promise( ( resolve ) => { \n      this.http.put(`${this.apiUrl}/login`, credentials)\n        .subscribe( data => {\n          let rs = data;\n          this.saveData(rs['data']);\n          resolve(rs);\n        }, err => resolve(err.error));\n    })\n  }\n\n  // Register a user\n  register(form) {\n    return new Promise( ( resolve ) => {\n      this.http.post(`${this.apiUrl}/stripe/customers`, { \n          email: form.email, \n          description: `TSS Customer Account for ${form.first_name} ${form.last_name}`\n        }).subscribe( data => {\n          var customer = data['data'];\n          form.customer_id = customer.id;\n\n          this.http.post(`${this.apiUrl}/stripe/subscriptions`, {\n            customer: customer.id,\n            items: [{ plan: 'plan_DpD0xG75aCgMpw' }]\n          }).subscribe( sub => {\n            var subscription = sub['data'];\n            form.subscription_id = subscription.id;\n            \n            this.http.post(`${this.apiUrl}/register`, form)\n            .subscribe( data => {\n              let rs = data;\n              this.saveData(rs['data']);\n              resolve(rs);\n            }, err => resolve(err.error));\n\n          }, err => resolve(err.error));\n          \n        }, err => resolve(err.error));\n    });\n  }\n\n  // Get Users\n  getUsers() {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/users`)\n        .subscribe( data => {\n          resolve(data);\n        }, err => resolve(err.error));\n    });\n  }\n\n  // Get specific user\n  getUser(id) {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/users/${id}`)\n        .subscribe( data => {\n          resolve(data);\n        }, err => resolve(err.error));\n    });\n  }\n\n  // Add a user\n  addUser(form) {\n    return new Promise( ( resolve ) => {\n      this.http.post(`${this.apiUrl}/users`, form)\n        .subscribe( data => {\n          resolve(data);\n        }, err => resolve(err.error));\n    });\n  }\n\n  // Update a user\n  updateUser(form, id) {\n    return new Promise( ( resolve ) => {\n      this.http.patch(`${this.apiUrl}/users/${id}`, form)\n        .subscribe( data => {\n          resolve(data);\n        }, err => resolve(err.error));\n    });\n  }\n\n  // Delete a user\n  deleteUser(id) {\n    return new Promise( ( resolve ) => {\n      this.http.delete(`${this.apiUrl}/users/${id}`)\n        .subscribe( data => {\n          resolve(data);\n        }, err => resolve(err.error));\n    });\n  }\n\n  // Get Events by User\n  getEventsByUser(id) {\n    return new Promise( ( resolve ) => {\n      this.http.get(`${this.apiUrl}/users/${id}/events`)\n        .subscribe( data => {\n          resolve(data);\n        }, err => resolve(err.error));\n    });\n  }\n\n\n  // Subscription to a membership\n  subscribeToMembership(customer_id, plan_id) {\n    return new Promise( ( resolve ) => {\n      var sub = {\n        customer: customer_id,\n        items: [{ plan: plan_id }]\n      }\n      this.http.post(`${this.apiUrl}/stripe/subscriptions`, sub)\n        .subscribe( data => {\n          resolve(data);\n        }, err => resolve(err.error));\n    });\n  }\n\n  // Save login session\n  saveData(data) {\n    localStorage.setItem('user', JSON.stringify(data.user));\n    localStorage.setItem('token', data.token);\n    localStorage.setItem('authenticated', '1');\n    return;\n  }\n}\n","module.exports = \".container-fluid {\\n    margin-top: 50px;\\n    color: #000;\\n    padding: 0px 40px;\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <h3>Users</h3>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\"></div>\\n        <div class=\\\"col\\\"></div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <table class=\\\"table table-light table-striped table-hover\\\">\\n            <thead>\\n                <tr>\\n                    <!-- <th scope=\\\"col\\\">ID</th> -->\\n                    <!-- <th scope=\\\"col\\\">CODE</th> -->\\n                    <th scope=\\\"col\\\">USER LEVEL</th>\\n                    <th scope=\\\"col\\\">NAME</th>\\n                    <!-- <th scope=\\\"col\\\">ADDRESS</th> -->\\n                    <th scope=\\\"col\\\">EMAIL</th>\\n                    <th scope=\\\"col\\\">PHONE</th>\\n                    <!-- <th scope=\\\"col\\\">BIRTHDAY</th> -->\\n                    <th scope=\\\"col\\\">LOCATION</th>\\n                    <th scope=\\\"col\\\">AMBASSADOR</th>\\n                    <!-- <th scope=\\\"col\\\"></th> -->\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let user of users\\\">\\n                    <!-- <th scope=\\\"row\\\">{{ user.id }}</th> -->\\n                    <td>{{ user.userlevel }}</td>\\n                    <td (click)=\\\"open(contentView, user)\\\">{{ user.first_name }} {{ user.last_name }}</td>\\n                    <!-- <td>\\n                        {{ user.address }}<br/> {{ user.city }}, {{ user.state }} {{ user.zip }}\\n                    </td> -->\\n                    <td>{{ user.email }}</td>\\n                    <td>{{ user.phone }}</td>\\n                    <!-- <td>{{ user.birthday }}</td> -->\\n                    <td>{{ user.location }}</td>\\n                    <td>{{ user.ambassador }}</td>\\n                    <!-- <td>\\n                        <button class=\\\"btn btn-info\\\" (click)=\\\"open(contentEdit, user)\\\">\\n                            <fa-icon [icon]=\\\"faEdit\\\"></fa-icon>\\n                        </button>&nbsp;\\n                        <button class=\\\"btn btn-danger\\\" (click)=\\\"open(contentDelete, user)\\\">\\n                            <fa-icon [icon]=\\\"faTrash\\\"></fa-icon>\\n                        </button>\\n                    </td> -->\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\\n\\n\\n<ng-template #contentDelete let-modal>\\n    <div class=\\\"modal-header bg-danger\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Delete Confirmation</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                  </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            Are you sure you want to delete <strong>{{ moduser.first_name }} {{ moduser.last_name }}</strong>?\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"delete(moduser.id); modal.close()\\\">Yes</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">No</button>\\n    </div>\\n</ng-template>\\n\\n<ng-template #contentView let-modal>\\n    <div class=\\\"modal-header bg-primary\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ moduser.first_name }} {{ moduser.last_name }}</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    Address<br/> {{ moduser.address }}<br/> {{ moduser.city }}, {{ moduser.state }} {{ moduser.zip}}<br/> {{ moduser.phone }} <br/> {{ moduser.email }}\\n                </div>\\n                <div class=\\\"col\\\">\\n                    City: {{ moduser.location }}<br/> Ambassador: {{ moduser.ambassador }}\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n    </div>\\n</ng-template>\\n\\n<ng-template #contentEdit let-modal>\\n    <div class=\\\"modal-header bg-info\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{ moduser.first_name }} {{ moduser.last_name }}</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\n                          </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    Address<br/> {{ moduser.address }}<br/> {{ moduser.city }}, {{ moduser.state }} {{ moduser.zip}}<br/> {{ moduser.phone }} <br/> {{ moduser.email }}\\n                </div>\\n                <div class=\\\"col\\\">\\n                    City: {{ moduser.location }}<br/> Ambassador: {{ moduser.ambassador }}\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close()\\\">Done</button>\\n    </div>\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from './user.service';\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  users: any;\n  faTrash = faTrash;\n  faEdit = faEdit;\n  moduser: any;\n\n  constructor(private user: UserService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.getUsers();\n  }\n\n  getUsers() {\n    this.user.getUsers().then( data => this.users = data['items'] );\n  }\n\n  edit(user) {\n    \n  }\n\n  delete(id) {\n    this.user.deleteUser(id).then( data => {\n      console.log(data);\n      this.getUsers();\n    });\n  }\n\n  open(content, user) {\n    this.moduser = user;\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', size: 'lg'}).result.then((result) => {});\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  viewevents works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-viewevents',\n  templateUrl: './viewevents.component.html',\n  styleUrls: ['./viewevents.component.css']\n})\nexport class VieweventsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}